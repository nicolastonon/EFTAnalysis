node {
  name: "MYINPUT"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 15
        }
      }
    }
  }
}
node {
  name: "Feature_normalization/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        tensor_content: "Y#\020C3\330\230;\323\234Q@\355r\004@\216\367\364\273\344\037\342?q\223\357?)t\004@G\350r?\225\370=@\266\014\306>{\371.<b\027\031C\222\262!C\035qzB"
      }
    }
  }
}
node {
  name: "Feature_normalization/sub"
  op: "Sub"
  input: "MYINPUT"
  input: "Feature_normalization/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Feature_normalization/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
        }
        tensor_content: "\372\302%D\340\246\030@\336\237\032@SP\017@\ttd?\022\275L@Z.\343?\320W\014@)y\363?\317\211\003@.\321\013@z\305.@@\305\006D\250\257\004D\342*\255B"
      }
    }
  }
}
node {
  name: "Feature_normalization/truediv"
  op: "RealDiv"
  input: "Feature_normalization/sub"
  input: "Feature_normalization/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
          dim {
            size: 50
          }
        }
        tensor_content: "\026\317\332\276\262\351?\275\263\376\032?\305?\030\277\306\034\256\276l M>A\257\326\274\225\371\206>\260\003\372>\252\370\240>\276\201\231\276\272m,>\201\034Y=\375\331.\277\277\352\250=t\027H\277\014\234\223=4\373\177\275a\030\263>\263\344\277>\n\003\352\2762\'\260>\r`\231\276\245\357\327\276K\301\242>K\177\002?\273p\240>w\253\024\276\254\211\310\276\207\326[\276\352et>\3712\222=\314\364n<A\351\233>\232\254x\276\257\320\016>\223\004\233\276P~\236>\t\355\337<\036h\310>}\005\234\276\026\037\210\276r\260&\277\272\314\355\276\002\366\r>\372\336\334\276\214\243\327\2766W\240\275\036\310\356<\202\233\r?wT\005\2774\312\202\276T\317\267>\236\375`=7B\314>LV$?\306n\276\275LD\031\276\333D\000?\270l\001\27735+\277\252%x\2761\313\\\274(6\224\276\036\316~>\327\"\021\274\210\270\\\276\343\2409?w\233\257<\204|T>\261\365\363>\331Y\241\276\005\'g>\324K\266\273q^q>\364\327\247=HZ\261>(\320\260>\254\2703?\216\226$\277\250\024\377\276I\312\377\275\023\260\n>F~@\274 \300\003?\273Y\203>\227\020\246\273\267\271\005>\271\207i\275cy\372=\367\277\231>\343k\260\276\177{\334=p\302\214=ru\360>\234\367\000\277\036\013\017?\220\014\026\275\355c\026=\221,j>\010\350\335\274\276\237\353<\220YA?\223\024\256\276\211\020B?\007\261\214\276S8\351>\306\360C\276\347\226\203\275\3231E\276\027\377\223>\314|\240\275\207\352\034\276.\312\240>\203\363\202>2\331\307=\234\2527\277\307\207(=e \312\276\307\334q<Tt\036\276m0\235=\227T,\276U\345\023\277\323\256\314\276\316\004\002?@\336\013>\016A\033?\332n\377>\354\004@\276\233\305\251=*\002\303\2764\244w>r\307\276>\2658\\>\321?\246> |\020\275\264\031\334\275/\373\345=\253_\355\276b\267\374\275^\237\217=Ut\356=\330{\016?6\203\027\2752.\000\2768\336\217\276\357e\343>\224\206+\276\334!\221\275\020\303\276=g&j\276P\273J>\346\243#?\305\331P\275\234\372\226>\257\216U\276%J\264=\227Qu=Hx\374=-\355j>\260\2445=mz\217\275\023M\000\277\'x\035\275xT\207\276\027S&\276N!Y>A\301\360><v\017\277`\336j>\272Y\016=I\257\246>`\247\224>{\372\275=\027\246p\276\211\236I>\330y\222\276\300\264\242>;\370\246\276\262\334\310>\3269\211>\201\234\216=|\325\014\277_6t\276P\362P\277\340\t\025?\330\302\004>Z\210\r\277Pj\020>\231\022\300>\322\262\353\272\374\267\267>\336\225\025\2779\254l>C\257,\277\\T\023\275\224\376\013?]\365\014<\242\352\200>\273!\213\275t.<\276\275\235\261\276\357\222\263\275\206\200I\275\365\017>\276\236C\337\274\362\365.\275\374\313s\276\3025\305\276^}\266>\177\232\310>\006w\203\274\266\345\027\277\001\212\003?\205\206\"\277I<\002\277\333\026\267>\332\3173>\321o\245\276\365\313\347>^-\014\276\335r\227>S\230a\275\315\235\364\275\272\353\020\277d\320\207=-\000\356=\367\271\200>\236\273\200\276%\226\353>\377+\262>\332\246\312>\243\300\351\276\314\034\361>\005\357\014>\306N\263>L\362;\276\227(\322>\"Y\334>\200\024\276\276\317\326\210\275\010\364\240\276\247`\265=\327q6\277\024pz\275\322\333\372>*\275\004?\250\r\230=\020\246\270>\0254\305>s\0373>w\352:\275\205\377&\276\321#\030?r\364\016\277\203\003\014\277\001\354\007\277\311\222\010\275\010:\303\276H\327\001\277\206M\237\275C\344^>x]\235\276\225\211\201=l\032\337>t\321\264\276\000\244\301\276\265{\010\277\372\216b\275\223g\302>\340L\217\276\276\302\r\276\3639\255\276w\217.?\024U\202>\303\214\352=:\311\203>K\336\300>1r(\276\002\014}>\342n?\274y\221^\276\311\253\262>\266\357\017\277\004t\025\277\357#D?\234\014\203\276\350U%?t4D>\266A\007>C\n\222\276\017\271\213\276\'\245\203>\354\024B\276_7V\277\254Vg\276\271\361\032\277\"p/>\240\356<\276\373\177\364>T\307\177\276\005m\246>\204\274\252\276V\365\267=\277L=\276\265\222\335>[A!>9\3274\276\023\240<>%\341\300\276\360\367\225\276\311]\250>\344R\001?\237dJ?\254nA?\246\230\302>\215(\234\275R.\211\274\337B\213=4i\333>=:\323\276\232\032A>\2169Q\275\001\212q>K-\262=\'\210^\275{\376\r?!\323\030\276\014\317\256>\311\004\033\277\022\000\035\277Dy\256\276b\356\007?\340\323{\276\213\336\203\276\204-\245=\217{\216>\22161=\204AO?\353\311\331\276\032Z\365\276\331\272d\276pv\007?!G\311>\035\036\016\276\231\204-\276\333+\302>/\322P>\270t\233\276\365\332a\275[\264\374\276\332\224\260\276\331#\273>\303\207\226>9\371\217=\251\351\231>\314Q\325\276\242\352\264=(\243\013>g\315U\277\216\215=>\302$R\276\004Q\r?\335e\231\276\303\364>>\277\"\313=!\342G\276\356\342\225>e\1776>\030>\306\275\026\231M>i\200\255>L\206\216\276f\207W\275\361h\301\275c\271\002?\312\023\">6\371\321>\267S\304=\0277)?\020\351E?V\346\33788\014q>9@\245\276\004,\357\276\236\030\367\276\246\3145?\206\345\020?g\222\315\275\234\347\366=\272g\257\276y\215\277\276\301\257(=\235\336\240\276\275\234\212\276\315=\251>\210*\237>\020\021u>\321\033\025?\240M\206>|G\242\276\222\265\334<\370\341\353=\"d\207=\2507\306:\001\023,\277\217\364\243>\276\254J\275\350\244\364\275\016\300G\275#=\020\2776\267\026>\016!\273>\274\007\270>\330Y\266>T}\374>o\225\204>%\036\372\275%\200(\277\266\224\213\276\371\372v\276\353\313J>2\332Z>d\334\032\276\310\237^\277k\227\013>\362\264\250>\252\254A>0z\302>\332\342,\276\312|\003?\302F\233\2760[\216\275>=\271>\354\307\317\276!m\250\276\217\332\253\275W\376#\277\277\320S\276o\224\232>+\304\202>\212#!\277\316\037\033>\344\375e>\377v\261<\233\016\\?v\345\310=\344\277#?]\246\235\275\006\236\370\274\000\007=\276I\246\343>\301\215\340\276\322\2165?\224\373\247\2769\275.<^\375\247>\246\221l\276;\017\233=-\252\337\276\217\037\r\276\021\1774\277\237\220\216\276\244\200\"\277\341^\376\276\334D\263\276\036 \253>\232\364\326>\245w\251=\242\243\"\277\030D\207\276\373\300I>\211\215\244\276qX\252=~\000\t?\372%\375\276vn\017>Lj\037>\222w\324>\262,\271>\227\320A\277N\016(>\361\227<\277@Q\201\275\324-\226\276\007\312\t>\370\267\331>\256\336\267>Z\304E>\244\274\326\274Y\230\215\276\273\233\031\275\362\250\264>m?\220=\260\003\004?\217\322\223\275g\372\032\275Q\245\036\276\250\354;<\201_\202>/eC\276\210\006\254>\310\037\277>\244\261^;Av;\277\373\315X=\232T\001>=\337\201>\251_N\276\201O\247>c\022\216>Y\264\006?)k\371=L_\006>\2066\206>\355DE\277.\222*\277%\274\266<\265\246F\276\230\033\302\275\222\275\003\276QFS>R\027\"\277F\022|>\021g\003?7G\310=\017\335\251>\243Z\225\276\034\207\265\275\320N5\277\330\247C\277\212\024\251=1j*?\306_\261=\014\177Y\276R9\336\276s\273!\277\003\027\330=\014\350\361>\274\357\263\276t\320\324>\372\330E>\353\327~>e\0079\275\004\325\033\277NS\022\277\262\305\032?\321\214\236>$8\251\275\006\352\203\276\321\211~\276k\026\360=\000I\210;\265\264\351=\txk>\023\236\341>\321\215\224>\375\344\352>\027]u\276\311\333\326>\002\226\021?\331\234D\276\311\310\227>\260\002\246\275\235\035\t\276w\361->O^}>\200\201D\276\321\355h\276\261u\357>\351\341\017>\376\226\r?\237G*\276+LT?\224\270\027?\005g\034\274\225\313\306\276\260R\316>\035?\260\276b\027I>\216F\324<\2745\023?;\032\274\276\2714\372\2768\262\220\276J\250A\277\246b,=?\327\255>\311\305{>\242\306\367\274\325\007\214>\016\027\247\276\363\035s>\000\003\352>\326\271\r\277\002\347:=q\375\024\277\214\177\253>P\"\352>\260\315;<b\363\233=\315\211\201>J\334\240>)\266\032\276\262\272\022>\310\2105?\3448f\276GY,\2765\273\327\276X\376q>\273\266\374\275.\010S=0\027\313\276\325g-?\305i\376=7\216%?\305Q\007\277Z\223\307\276\376\263.\276\214\226\n?\200!O=\030)A\276\225\234T\276\363d\220>\364\322\331\276\352\344\021>\342\234\016?\257\301\320\276m\216v\276\350\2655?\252\226U>\356\023\263\276\364G\362=\345D\r\277W\035\373\276\301S\267>\343\215\025>\312E\250>\270\250C\277=\360C>\350/\273\276\270\360\013\277\307\301\351\276p\221\332=\376\323\301>,\2517?\260\300\007<\265,\037>\251o\203=\303Z\322>-\036\324=\210\337w\274\274\r\276>\0352\'?U3\374\276e|\304\276D\365\005?co\314\276M\262\273>\033Lw\276\003){>\247$\021?\331\321\334>\324\241\366\276h\2540\277\240@O?r\227\241\276\346\237O\276:\000\323=\335\336\010\276Wo\221\274\241\"(\275\370Z\300=W)>\276V\206\211\276\225N\006\277\037\036\213>|\235H\276\253\374\310\276s\352\205\276\305\274L\277\021\242\363\275\350\263\010?\377#8?\000%\226>c\357l>\241\243\347\276\345\355\364>8\373!?I\031\243\275\027{\253\276?M\362>\267\034\020>m\212\263=\233\017\313>\304\356\246>\306\357+\277\016\301\033\274sv\022?*\241\024?\342\232\230\276\341{\364>\322\0256\277R\216~>\010\n\336=\314v\240>\327\245\343>)x\233>0\253G=Q\007\\>\211\266\035\277\216\030\027\276}\036#\276\271\322\356\275\251\036W=\257\354B\277ezA>\340\235\000\274\261\005\004>\214/u>>\313\n\277\032R1>&+\255\274\331\036\275\275\340E<\277\247\360*>\325\025\n?\224\357\230\276\364\310=>G\260,>\245\376\266>\242\236/>u@$>\212_C\276\235\322\325>\022s\\=<\212\236>1@\257\276\254\373.\276\344m\233\276\314\374\342>\305]\r\276\204\256\263=\245\232\243\276R\365\333\276)M\340=oM\315=\260\023\226>\307\014\206\276"
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\000\205G\274\373I\255\275\361!\217<\272s\000\275=\246\'\276\205VX<\252\323\372\275\241\365\374\274\0333E=M\333u\274\201oF\275X\377@\2758\032\327\275c\256T<}\t\246\275\275\374\267\275\300\264\320\275\222\360\230\275\304c\033\275\356%;\275_\0107=\274\272\242\274\272-\220\271\270\200d\275\335E\362<\342\221\307\274\261\215\375\275\037\351%\275\247\244\241\275)\2175\275\204\004\021\274\t\335\250\275Hs\307=\010\355\230\275_i\177;\252n\374<\350\",\275\311\333\252\275\3007\206\274\346\304Z\275\262\007\023\274t#\214<\361\205g\275\003M\275\275N\0008\273@S\341<&!&\274\003\364\303=I\235~=P\0312\276"
      }
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "Feature_normalization/truediv"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense/Relu"
  op: "Relu"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\225A\202?Le\206?\262`b?ts\210?8:_?]\275\206?Auw?\314\260\221?,\323\201?\034\366\203?M\026\220?\264@y?\030\236\204?\321}}?\211\376T?r\273\213?=\246T?\205\355\221?\3275\200?\315&\216?\204\022\211?:\271s?\222\rV?\375k\205?2\252z?\246\372o?R\264\215?a\210\202?\032A\201?#\375\200?\316\234d?n\325g?\217\224g?U`\211?\336\220g?r\006y?\211bx?(\177S?t u?y+b?\007\031\211?\200U\206?\364i^?\276\212\215?!(f?\364%\200?\365;d?\000\216~?\3273\205?\256C\203?"
      }
    }
  }
}
node {
  name: "batch_normalization/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: ":2!\275{~\317<A\325*\276H\200\260<\375]\357\275\227\317\r>\223;r\275\305\320c\276_\005z\275\342N)\276\220\310\303\276\317\233R>\273\324\020>;\233\005>\230-\356\274\214\222g>\356uw<0\267\212>L\251\252=\300\300g\275\357M\222>\254\260\205\275\332\203~\274\345\337M\275\265\264s;\"\320p\276\\q\017>\201\016h>x\310[\275\316n\032\276\371 \217\275G\212\013\276\341Q\003\276 \002f>!0\337;\362\307\247\274\r\367\'>\356.\177=\370\366\210\275\266 $\275^\253j>\337\342\r>\325\202\005\274\313:\236=\333\331<>\357\003|=\3212\313\2747mz=\206\342n>\312\363\240\275"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "%<\203>\2252\016>\345\353\233>#\266t>\021\'J>\355\210r>\004\274\013>\2600_>\013\262`>\204\2427>\301\300m>\316hQ>\342_G>\tL\220>\327b\201>\227\316\206>\375\221\312>\316\206O>\245;\341=\206\376!>\266|\227>\225\245H>\372\304I>\352\360!>\031\310\231>\004|y>$M%>\003\262\213>\264a\212>\006\321\\>]%\324>L\207\241>\r\366J>\220A\242>\247W\206>\032\010\263>6\324\201>,+2>f\017\215>\362\214y>\010}J>\340\022$>.\200\275=cd8>\373\'\213>\227\261\276>t\232\244>e \225>K\366\205>G\322g>"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\2735\301>\274\374\361=\366O\341>\311\307\230>\330\270\222>1Q\224>\037\355\020>\225\232\225>\302\242t>\220\0033>^\261\241>V^d>m\330n>\322k\316>qp\255>\367a\321>((R?q\230\231>\213\276\261=\220t\026><\336\340>\374s=>\252\270z>\235J)>\210\277\315>Q^\265>N\013&>\215C\323>*\256\355>\000*\236>\005a]?(B\005?E\251F>\256\321\004?:\024\274>G\034\026?}$\252>r\274E>@r\275>C\202\270>\225\rH>f\031(>\017m\232=\343\332k>\241\200\277>,S$?\300\317\345>L\312\352>\203\227\230>\361i\242>"
      }
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add"
  op: "AddV2"
  input: "batch_normalization/batchnorm/ReadVariableOp"
  input: "batch_normalization/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization/batchnorm/Rsqrt"
  input: "batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul_1"
  op: "Mul"
  input: "dense/Relu"
  input: "batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization/batchnorm/ReadVariableOp_1"
  input: "batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization/batchnorm/ReadVariableOp_2"
  input: "batch_normalization/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add_1"
  op: "AddV2"
  input: "batch_normalization/batchnorm/mul_1"
  input: "batch_normalization/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 50
          }
        }
        tensor_content: "\374\272+\274\370\270\234=\354\321\337=hI\257>^\331\245<\236\005R>\'>\016>\374\360O>kM\302\276w\211*\276)k\020\2759h\234\276\010\257\226\276r\025\014\276\177&\321>Y\257\273<\222&\233\276\307\361\244\275J\261\324\275\326-\017>\310\216q>\354X\204>\211\330t\273E\352]\276\016\'\210>4\227\233\276\277\222~\276$\273\321<V+\247\275\036&5\274\252\2326\275\272\230\">\313|,\276zC\232\276\312\002B>\365i\260\275\313\226\221\276\217\213\262>\033V\356=\214\206\025\2764zV>iy\234>\220t\026\276(x\336<\205(\264\276\247\363~=\201\367:=\354;G>\352\264\310<r?\340\275W\332;>\212\355\202\276\366\366&\276\247\346*>\341\3775\276:,B\275\222\025\036\276-\263\305>\372]\354=\036\024\n\276\301},\276\305C\233\276\022\372\007>Kd\316=C\345\210\275\363\250\216>\374\027\232\276\327\232\255=\332_\005?\241A\'\276(u_=\211\257\224\275\375\002X>uq\346<\365\254\355=\023\217\313>\334\307\203\275K\n\000;\202:i\274\221\252\250\276P\372\210<7\323h\275\334\344\310\275\206|\325>ob\231\276\354\005*>Q\221\206\276\216\025i\276\257\326z=\t(\024>Vc\323\275\357\013M>3?2\276A\230d=\235\3557>\010M\336\275\362\373\261\276:\tF\276\350d?>x\264Q>\302X\256\276&\265\325<\303\323\320\276\364\2323>\016\232\036>O\223\256>k+\006>\216\026\242\276\265\005\256\276\3456M:iX\225\276C!\235\275Z\021I\276\24698>\242\245\321\273\343S\231\276\014~\213\275\325H\326=&l\310>n\251\226<\245\005g>4\262\203\2752\310\222\276D\027f\276\261\214y\274\263N@\276!_\232=-2:=$\277\210\275\234r\365\275\351\376-=A\346\376\275\331\242e>b)J>\r2)\276\340\344\237\275\234\326-\275\374\336w\276\201\217a>j\\C=N\003\246>\307\336\376=\253\013\"\273p\377\005=\221{\302\276,\206M\275\341\222\014>\364I-\276\232\032\215\2764\242\206<\232A\236\275y\n\265>\357\025\230\275sxw\275u\266Z>\212c\243\275,P<\276\035\216\005>B+\377\273\240\363v>\347\355R=\342\330\r=\256\365\232\275\017\377\344\2760\353\234\276\306PB\276i\363l=?\333c\275\377pH>\342u\003>\257\272\344<\372\337\340\274K\306>\275\322\370&\276\033\224\005>$p\304\276V\017\000\276\226\240D<\320\265N=\252@U\276\304\366\036=q\260\342\275\266b\254\276\347\263\342\274\303\374\340>F\336\324\276\257\t\264\274:\234\\>\033\361\025\275\372c\010>C\340\256>\325?\260\276\265\270\300=\360\316\352=\226 i\276\300\\O<i\351\253>}\032\264>^p\277\276K7\235\276V\257)<C/\226=\246\200\373;\271KM\272g\353\330=\326\002F\276\020;\344\276\203v\306\276\225\241\241\276q\331\223\276@Kn\275e\377\240>\017\243\314=\237\020\252\275\350\3741\275\325-\241\276dB\277>&\036i=\252\206\357=\325\356*>\347\236\356>l\256\301=\307\240\177>\347\323&=\357\302\345<\305\2508>\347\361T\276\245\303\244\275\004\306\'>+j\247\275\255\272C\276e\355\257\275\274A\214>\205q\330<\313s\235\276\253\231Y=\205\226\346\275\347\001\347=\177\306\276>\355\271\002\2761\177\312\276~U\234>Z\'\213\275\213\244d>\340b\315\275\2133P=\227)\217\276\'\317\201\276\365\013k\276\t\200\227\276\266\324\327:\320Y\252>\356T\270=j\341\206\274\037\351<>\300\204&\276;xK\275\005I\272>\207\2326>\321\354\331>\262\364\316=\215j:\274\0351\322;\344\273\251=[\221\271\276-\034\212>z\272\213>\r\346\200>?\264\233\275\311\207\234>#gG>\335}\025>\014\265\304>\263\005K\276\352\202\267=\336\213\322\276\372\330/\276\035\'\252=\3157y\275\237\3419>7j\250\276RPJ\276\344\236\253>gT\253>1*p=\330\324\205=c7\232\276\313\301$\275\337v\350\275\013/\315>\000e\227>\013T\177\2763;\223>|a\227>\242\t\020\276+\352\024\275\361\263\325\275\215o\210=\306e\204=\037\345k\276N \256\275\205\345\036>*\237>\276\352\301<>\333{\213>\327B>>f\250\376\275\274\345_\276@\301\215\276\211\374\324>`?\214\276d\241\007\276\236\201K>\335\235N\276Dks\276\224\303\262\275\010\204\010\276\303\203\210=\213\320\250\275+\003\234>\017\337\t>\202T\020=d,\372=-\266Q>w\235\003\276rXR\276\264\241,\276s[\007\276gQD<,\261\002>\272*\023\275\002\005\265\276\177\362\241>\365a\005\275l\3500\276\272s\366<\204\002!\276l2\221>\203\024\236\276\363\026\253>\252\022\327>\216$\360\275\007\222\367<\263\342!\276y\003\334<\276\030=\275&\222V\276\313\226\332\274\304Kd>\362\250\360\276$\3108>\362\300\315\275\201\271\250\276\177\200\257\2746D\032>\231\264\021> \346.>\235\341\311>,^\213\276\002ge>Y\334\236>\250:P>\240\352\374\275\235\006\321>R\237\342=[\326^\276\n\013\007>j\363\223\276\272\376\266\276\342m\022>\026\356\001\274\262Z\016\274C\226\265\276x<\302>\351Tt\275\204\223\'\276\246\312\203\275\272\364\351<i\373\211>\351y\347>(\345\274\276\244\271)>\331S\241<\326\343\261\275\362\275k\276\225\221\236\276k\035\030=\022\361\370;\247?\316=\306\024\205\274F[\367=\2064\214>\364\267<\276\320Ce>[&\326\275\331K\337=~\\\310>\2764\250\276\005\037\257<`\210\236\275 \002\317\276nU\212\274\270\2203\276\311\306\315>\235\222\300\276\256\001\373\275 \337\010\276\001\020>>\177\030\370=r\256]\276K3\021\276j\231\250\275\351\306\216\276~\223C=\361\334\002\277\235\251\n>\250-[\274(5\206>\031:\210\276\205\014\004\276\370X\234\276\2665\212>\031[\213\275\223fj>S$\"\276\314~|\276\363\314\240=Z\363\231>\0045\253\276\235w\376\275\373}\207\275\276\300\234\276iI&>\274i\366\272\342\245[>GE\334\275\0234\'\276/\204#>\367\022\265\276\373=\n>E\271%\276N\255,\276\320\302\002>\244\371->J \006>R\232\322\274ib\021\276zzq\275\346\262H=\036 x\276\272M/\276tv\324\275<A\216\275uj\217>{\355\314=\212\330\320<@\273Y\275(\210`>\230G\360\276\267\247\246\276\202+\261=\275\226/=F\247\">Kp\207>M\325?>AJ\361>\017\023\332\275\303K5>\301\205\362\276rud>\002H\'>\366\"\253\276\"8\r\276;q\244=\256\367\251>\221\315_>\233\250\240>\2779\302\275\21429>\227\003A\276\235S0\276\221!\254>\221F\237=\361*\276\276\223q\206\276\262\315\201<ta\352<xl\317=\"\226\222>\034\035\000>\002\231\213=\243\247\177=\013\035\020\276\266^\004<u2g\276|\026\212=*\326;\275R\243\226=\274\266E=\325B\357=\023\025\026>[D\357\276\034U0>\325F\356\274\317\250r\276\001\340`=\312\235J=x\360\265\275\204\345\322\276\370;\210\276&\352\206\276b\360$>/\345\210=\003\250\214\275E7\225>\307\356H\276\002\270Y;F\r\234\275l\t\r\276p\326\356\275\303/\343>\225\362\t=\250\020\231\275[\027\033\276\027f\004\276\307\232\370;\333\274\262=\212b\217\276~\0341>\313\250\333>\323\032\304\276,\261\316=0\332\000>\027\"\237\276\242\364\343\276\207\370$\276\351\344\323>\036\267(\276\210\271\275\275\266Hr\275\220\026\330=\036\327\271\275Z)\276\276\232xw>m\363\014\275.\002\271\273\207\261\354\276l\262\301\276\022h\324\275\037\224P\274\177 \020\276\024\267U>\256~\366\274\031\254\347;aG\r\274=\\\254>\203\377\300\276<\334\020\276Z\325\254>\022?F>\001\325\204=%~\026>\367\224\021\275\n?\355\275\202\250d\274\305\016\202>\311>5;\306\223b\274\243\344\263\275b\0140\276\242kE\276NQ\226\276Z\207,>X\021\204<\303\304\227\275b\264\253<\222\245\247>r\344\325\275~\217\353>1\"(=\300yF>\270\212\211\276\356>5\276\314\260\257>w{\341>\2341\327=\006:$\275\337:\027\276\210\315x>z\344\230\276\206[\242\276\356\357\203\276\244\'\243=+\307D\274:\231\345: 9\247\276\270\365\207\275}j\303=8N\201\276\212e\270>\376\007\335=\305TW\275Ma\333\275\266l&\276\352\206\210\2755Z\024\276zkE\275z\344m\276r\021\004\276\000>\224=@fi\275@\274\024\276O\013\275\275.\273\001;\234\341\254>\003f\201>\006\216Y\276\003\250h\276E\013\231\276\022\023\320\274q\335G\276(fQ=\322\003}>\340]^>Y\000p=\2671\023=\330@\266\276>\261\310>X.\330=\245J\201=\372\236\244>\377uQ=\213\240Z>=\034\022=J\271\261\276\0333\366\275\024k\277=\246x==\001\022\310=\213\247\200>\373\255\220>\010r\276>\252\227#\276\007\3541\276q\\\321\276`\256g>uG\001>\214\\\273>\224\330\033\275c\242\216\275\310\252o\276\227H\223>\023\206\346>\356(\230>\375x#=\302R\215\274;\232\253<\216\016\225\275\261\334\r>\311\370\344\274\013\216\023>\271\340\244<P\237,>3\273\020\276_\033\375>-\002T>\250\204\305=\322\245\261\275\032\233(\276\252k\016=\023QS\276:\224\312\276\273\232\352\273\002\276\000\276\030*\356=`\223\301\276\000\202\233<\215\303x=B\240,>\267O\233\276\r>\204\276\350,j>\341\231\374\276S\305\362\275\217\023\025=\323,\262<\275\352^>u\243 >\226\247B>\223!(\276d\221a>\241Q\016\275\335s\362\274\245\357\245<\324a\370\275\247U\232=\327\352L\275os\231\276\352\335\360<\000\225\364\275\006\360\321\276\206j\n\275a\275G\276\253\360\370\274r\212T\276\225h!\276\244\\\330=\010\224A\275\212\tV\276\200\224\362\275^\265\262\276\206\343;\275=\'S\275\037\310==O\347\254<\177\334I>jc\003>\201\371J\275\315F\363\275\266\210)>\261\034\253\275ww\034>1I\313<I\245\231<\2153\221\275\213\025\\\276b\355\327\275\007<\332\274)\376b=\201L\316=wf\032<W\034\032>\206\355\315\275l3\275>\345\tr>(\r\212\275^U\342=J\010\266\276K\2605>\273\020\002\276\220\202\245>$\226\305<)\275\005\275\364u\034>\353\241\362\276\306\2459>\241\315\246>\202\336\030>\217X\244\275\017\373\265=\304\267\273\2758\231\256<\304\341\301>@k\310\276\261i\211>\377K\373<\372\222T\275\301X\304\275\025v\213>\345My>P)l>J\335\027\276k\233Z>\023\212z>\241\310\272>J\014X\275\305\\r>\007a\002>\031\263=>\214W\357\276\367\352N\276\240\234\364=\035N\313>l$\337\275C\267X\276\216\376i\276\023\332\205>\3529\233>s\263\371;\212{\'>p\3644\275:\234\220>X\332N>\211\221\227\275\005\237\225\276\340s4\27697\033>\337\261\212>\212\301{\276^\206\214>\212\377B\275g\324\254;\177\215\032=\266FX=\222\275q=_zn>-\242 \276\177\277Q=\350i\024\275\031\005w\273\335I7\274\211\271\204=So\037>@\272\224<\221w\037>C\226\034\276$\301\250>\214wB\275\023EX=\200{\025\276\3353_\276p\341y\276\201c6\275J\315\300\275\331\303\200>\265LX=\330\316\374\275B\340\324\275\025\001d>\323j\212\272\356\371~\276\353\302.\276\033\021Y\274*c\360\276RE\031>\033c\325\275\323\'\004\276\003kB\275\211\357\255=\246\232\265\276fH\300>\266\313>\276*/x\276\037\334\372=\215|\314=\362\213\010\276\037\346\234=\237\264\342\275\031\322\227>\261\002A>\036z+\276\340I\202\275\242\350\244\274*\362\205>\026\2333>r:R\275\267\373\210\276\344vz\275\213\225\026\276b\317\356>\231W\374=\322\367w>\313\016\211\275\314\031_>\001\006\327\275\322\344\270\275e\024\331\274\266\240%=\201,\001?\330D\372\275\016\226\237\275\376\'d>W\353\342\275\3316\006\276\254\342_=n\237O\276]1\220=\273\017\216>\351\tk\2769@\213>\260\377\025\275\304\222\315\275\006\315\264=\322t\205\276\354\276\006<J\205V\275\320=\351\275\002n\334>u\002\255>\020(\271=\315\026\340\274\350l\321\275\\u\037\276\014\034`\276hdE>\207\333\341>\177\361\000\275\026\377%\275\246\250\352=\220\216\217\276\306:\271=\266A\000?c\364\255\274\220\361i>^\3270>\235\360Q\276gA\001>lj1\275\033g\276\275\323Q!\276/#\254=\272O\306=\313\231\\\275\345_\364\276x\275\204>\245\230J\275\352/\206\276\203\255\264\275\326h#>0\315\207\276\354\337\260=\207\270\026>\207p\026\276KC\312\276\217dH\276}\227\320\275\225\224)\275\274\263\325>\301.]\276H\3206=\361\226Z\276\225\340a>\236\237A>v\277\246=\211\3465\276\007j\220\275wCa\276=9\242>\035\377\215\274l\313$\275\304\266t\276a\204+\276\374.a=F\306\003\276\335\330\316\275\"\302\317\275\324\336W=9\0174\275~\217e\276\354\377\312>b\352\315\276\342v\\>\220\024\241>\245\350;>\242\314r>\222\010\000:\335\201 \276\251ZM\276r\370Z\275*\030\267\275\004n/\275w\010\322\276\266\304\336\275\274WG\276\327\006\032>\307\261E>\n\023l\276L\000\330=\324h\322\273\220\363\253\276\203\376e\275\207JZ=\"\256\230>\350\'q>\260\211l\276N\243\242\275\314\220\347\275Vp4\275\337j\270=%\204\245\276\026\367\226>\216#\211\276~Cu<\2470s\276J\013%=\235\266H\276\232\333\000\275!_u<\303\244g>|\312\033\276\247\304\325<q\177\313=\265&\010==\366\254>\214\303O\275c\324\315>(\370\n>.\207\020\276)h(\275C\331\n>\270\207\351:\336U\211\274\243\032\245=\236\002\215<\2605\205\276\310\367\360>X.\211\276\327c\\>\274\240H>\322\257\254=\352\036\321\275\351H!>\206\325\337=\262(]>=8\253\274\202\314\031\276\266\233\265:Od\010>\004Q\322\2754\342\321>}\"\000>)x\242\276\nu\251>\210k\034>3s\331>\267\331\231\274\001\332\030>\213I\222>\033\216\261\275_\337\316\273\264\333\247\276^1\350=\0250\004\274rVs\274G\214\203>$sH<B\002\325>\323\223W>@\376\203\275\205~=>o~\352>{\030\304=\365D\010>\260\207\216\273fkS\276\254\317\013=\206q\034\276K\217\266\276\212\215\013\276\360\213\272=V\232a>uu\347=,`$>\225;\245=L\336g\276\363\010\302\275\367\320\215\276\250 d>?^\225>\222\260>>\252\3215\276\0359>\276\257p\375\275o\222\026=]P\226\276S\215\205=\366\203\307\275C\361\376\276\251^\\\276$J\t\275\000TU\275c:$\275\215l\236\275K\355\237=\360\254\371=v\342\242\275\301s\033\276+\343\366\274\3751\225\276\020\305\365=}\350\237\276\254\330\214=\2538\302</0\254\276\264\266\002=\360Tx\273\237C\331>\315\367,\275\022\n->\335\337\275\275\215O\232=X\233\031>\213\244\355=T\t\333=\344y\'\276\030-\n>\210<\206>\320\2761\276Ax\205\276\222b\354<$e\312=\237\367\227\276\001\036\"\276*\006K\276\221i]\276u\225\207=G\366\316\276=\354\364=\017\274\202>m<\244\275\r{\225\276p\275 \274\313K\227\275\340/\344=\027k\246\274\362\246\253\276\037$\227=\277\354\344\275S\376\201\276\272\203/\275\311\256f>\333\013m>=|\377\274\373x+\275\274D\273>\347-\323\276\343\265\231=\240@\025>\004B\211<\355\263\230<\'6\222\276\360\305\263>O:^\2758G\223>P(\260>s\373B\275\213\377C>e\177\305\275x\357z>[\344\217=Nh\'\276#\347\203>)\360\242=v\376H>\273\001\236\276\022\317\017>\320[\244\276}\215=>\375~9>\274\317\r=\026\235\252;\022 \350\275\215z5>\343G\332>>\016\210\275\323D\340\275\376\345\027\275\027_\242\275\263\317\033\275\255B\257>e\247\236>\233\225}\276\341\2022=$\345r\276\026\3529\275\020\033+=\221\004\014\275\342\377\320=;\254\002>\275%\252\276o\303\240\273\202\361\376>\247\206\207=\320\005\366=\362b\222>E\002<\275\013m\333>(\0259>s\357.>\230\302\340>\305\270T>\335R@\276*p\251=p\342V\276cc\234>\321\367n\274v\034\236=r\031\315<U\267s\276\220Di<\243\234\013\276(\360%\276\360<\211>\372\323\336\275T\035\347\275\265\353\022\276\365\"$>J\270N\276p\317\375\2751\372->\256\335\"\276\321g\340\276D\366\201<\277NF<\245\263\226=\312#\202\276}\016\002\275\317\231\207\272\201\311<>\351\270\227</[\241:\242\302R>\254~\242=\260\230J\275d\342\302\274\250\210\242\276\347\362!>\321\274\272>j\033\021>\002\274\025>\351\221\321>G7m\276yUP\276\221\346\330\275\277u\251\275\200\2552\276<4\014</\2145>\256\331t\276\246u\206=%\311\036\276\022\0022=\r\037\223=\013\022\222>}a)>\304\264l>\304M\007?\376\343\032<|\001\265\275\374\004q>f\004\201\276\350\316\261>_$\216>A\240\241\275\250\337\207\274D\262\261\276\223}\251\275dU\225=\033\342\177=\252\252\243\276\352\234\250=N\331\007\277\3013\211>\243\353e\275\030\177\212>YQ\247\276\372h\200>\2009\320\276\221\245\025\276\234\366\373=\325k\224>$zH\276\010\373\236\275%\373\365=\326\334\314=\251v\261>.mX=s\206\300\276\005R\251\276\025\245\244\276W\261\024>\216\332\221\275\254R#\276\017\261\300<C\305\242=\032\266$\276`N\230\276\224\275\271>\357-J\276<\"\372=\265;\215\276\247U{>\010\360\030\276$\320\322>\023&\231\276\036d\330\275\024\311\003>\356\226\352\275\241\311\241>M\253\375\276\0258\250<v\006G\276:\225\274\275!\256Y\276 ^\226\272\3679\353\276s\207\204\276\266\207\003<aE\272>\014p\377=\250 \305=\215\240.\276\376=I\276\221\242\014\276\270$\207>q(\007>\004m\004\277\033\020\250<u\251>>\255E\222=\343\202\327:\005\327\265>\366$\031\276\030\023t\2769?b\276\330\236\304\276\220N\271\276N\362\243<w\321\225>\346\263\234\275\236j\305\276\360D\214\275,\267\330\275o|\217\275-\211\247\275\2356\274\275{\216\007>h\006\334>\336\317\021=G\217\277\275\321\226\203\276A\350\300>\017\205J<\261+\316\276\303\243\n>l:\025=\316b\n\276\205W\336=lc\352<\370\323h<\350\373%>\256|X\276\363H\242\275+`\222\275\277\234-\276W\323\221\275A\223\312=\236w\331>\255\n\365>Q\353=\276\375\270\220\276\330c\220\276\3420\333>\277\367\023\275\373\312\023\276n\246\314=\366\2534>([\272=\324\314\300=\201wR<\260\221\341\275\263z\337>W\365\360<\323\363\335\275\325\374\001\275\277\334\014>\321\0055>r\277`>\250\226r>\331\241R>\0325\240\276\355\301\023\275\203~6>W\210\200>B\312\256\274\334\352\220\275\013T\263>\227\272\177>\202&\232\275\361\332\322>_\325\341\2743\272|\276\207W\265>Nkw\276KTC\276w~\330>b\213\205<\330\\\213\274\315\332\200\276\230\3443>\213\006\260=[\321\221\275\345\')>\323\022j<{\337\366=/\2435\276\220;\022\276\271\241\306>\277e\222>\354\303\245\274\355\331\224\276\311%u>!u\271\274#\366L\276[9\252>}\315\237\275\307\233\361\274t\356\334\276H\373/>\177\211\266<\307\r\252=\303\261L\273\306\214]>\216\234\306\276\322K\307\275\227\207S\276\251b\234=\321AP\275~\350\341\274\372\304`\276 \351\251>E=\271=>\352~>\230kk>H\265\377=\364\032\364\276\363\025\\>\"\242\274\272{\236\216\276!\004\240\276P\270\225\276-\2216\275/W\003<H\244\371\275\352\301\353\275\210\245\364\276<\030\022>\335a\215\275Qi\222\276O\026\246\2755\252\251=\312&W>Q}\343\275\025\247\201=l0L\276\235\307v\275>g\335\275f\361o<\026(\327>\364\275 \276\347`\252\276\320\302\202\276\222\255\367<Q\323\327=yP\261>\235\250m\276\220l\032\276\233\016\231\276\262\240\256>\t\203\341\275x*\205>\303\340L>\tN4>\243\262\033>\243Rt\275\336\245\205>\220*8>\237\325\033\276\202\320\"\275\024\366\354\274\223\234s=Z\276\334=\374\177\226\276\235\255Q>\350\343\024=\351\211\247>\220\354\233\275\265\234\325\276%\243\363\275-O%\276\345\367\245\276\222\327\373\276P\205\241\276\361\2510>\035\214h=SR\334\276\274\013\217>\232\223Z>\315\347\227\275\277\264\203\275\235L\330\276\023\261\233=\033\350\262\275\216\375\226=fZa\276)p[>O\023M<{`\301\275h^\231=o\343[>\350zG\275w\337U:q\002\243\276\3413\200\275\0275\335\275\353?f>\267\213\023\276\331Q\202\276\'\203\224\276\2365\302<\320;g\276\225\264\276\275d\212A\276\202-U>\275\002\033=o\200P>H\260\336\2756\373\256>\270\026\216\275\200\017\205\274\256\340*\273\310_\204\276\035{\317>\t\331\000=w\370\025>y|\276\274\337\231\255\275-e\r\2763\306\265\276\345\341\342\276\361\035#\275\236\314\305\275z\324K\274X\362]=\350\314\210\276\266\334\215\274d\261A;\004\263\314=\177\327\247\273\220\3610\276\240\307\300=\227\2328\275\314E\'>7\376I\276\023\\\021\275\013Z\247=y\335=<\026\202\220\272\236x\312=\367\371\356\275j\2258>w\002f;\302\354T\276\237\204\021==\200\201\275\240\360\250\276\032\367\231<\3548\220=&\306<\276\324N\323\273LNm>\260\223\225\275\326\\\231=;\022X>\225\346(>\310\300\306\276~x<>\353\341O>\315T0\276P\251\213>Zy\017\275,\220[\275\356\003\013\275\'\037/\276:5\002\276\357\333l>\205\236U\275Tk\021\275\023\263\321\276RmQ>\210\252\001>\320\245\364=\353;\010>\367\332\341\275{\270\257\275\247\367G>({\356=L\003\312\276\024\310\205\276\030\r\363<\027p\315\275[m\272\276\363\2059=W\256\333>\037t\265\275\270\010\310\275\364\336\031>Fxp=vLL:Q.\255<\227\3126\276\3751\025\276g\314_\276\013k\215\276\233\255\371<;\213\203>x\374I\274;D\356\275$\232\364=\327\026\220=\261!3\276\347P6\276\"([\2767y\031=\241\235g=\231g\020>T\342\320=/\331d\274q\355\215>\220\014\251\276\026y\036\276n\241\254\274\332-\327\275\260\340\032\276#\372c\276\335\334\020>\244\375\005>z\321\360\275\001\024\225\274]\030\216\272Q\240]\276_,\331<\250L\202>\260\247\013\276\361DI\276C]\355\275H\010$>,\033\337\275 ~\210\276\356>\316=8\236Q>Wb{\276\213\354:\274\240\226\340:<=\016\276W\375\206\275\362\350\025=\366\276\310\276gX\235>\231\344\311>1k\311\276v\351\341\275\367E\310=\232\375!=\202\232\036\276\215\314,\276J\212L\276+]]=\314\362E\275_K\347\275^\010\370\275\000\203\211>K\261\013?\273\306\326\275\000\267?\276\205\026F\276\002bq\276-p\027\275\207\344m=\002\246\200>\021Q\220\2755\254\252\276r\t\371=V\363S>q\316\230\275\034\316\222>v\300\255\276\3522a\276gBG>\314S\034\276\251\330\317\275\351\226i>]\002\231=\206X\302\276\316\242\275\276\265e\n\276]m\324<\356\354@>%n\223\275\200\206\255>\rN\r=\22774>!n\362>\270\230;\276\367a\026>\271\204\366\273y7\236\276\305\247\273>\"Xn>\025\322?>f\330t\274\341^B>\317$Z\276m\262\017>\367\267\033>\333\203\373<\364\031\213\274_+\212>y\004\231>\336\213\240\275\351\323~\276&DX\276\305\031\021\276oF\">ez%>GA\257\275\3603\232\275\2528d=\323G\272=r\223\207\276\376q\013>gJi\275\030\014\202\276\256 \353\275\305\323\352=b.\013\276f\240\364\275\321F\225>4K\260\276Xq\t\274V\3236\276\327\211\200\276\205\350\242=\303p\202\2751\327\372=\322\375Z>\034\212->0%2\276\257\263\274>\332\244\251=\254\357\366\275\033\263\007>\277\232\213:\265\243U>\275!i\276\016EI>\327\031\222=\256\260x\276@q\024\275_\311c\276\275c{\276TZ\002>u \'>\205$p>W\356\356\275\025\265\334>]\306\314=GB\335>\033\324\352=\310@\004\276\242\200\013>\220\325V;\2072I>\2562\200>8\246\002\276\202\"\360;\222\235\352=\261\360\317=\212\025h\276s\334\233\276\315\236\324<\311\026\003?\016f\003\276\320\026\330=\360]J\274\214D\365\275\225K\">q\263E>7\207\234>\237\332f>v|u>\365\330\027>\262\362\257\276j\347\014>\250\0259\276\337\\K>\236\n1=Z[O\276}\005\270>\255\324Y\276\377\204s\276](,>\253\356\300>\267\370H>ra\231>od\333=\330J\337\276\3021\222\273/h\342;\2469X\276\320+\201\275n\303\315=(V\023\275\020\327\346>k<\014\277t\347\n\276\275O\277\276\r\231\022>\n\220\236\276Iz=>\304a\215\276\245\303\004\276\231\265\"\276\204\361\277>\373\005\004=O(\027\276O\320\245>\312\224m\2761\332\214<\341\360\014>g\034\217>V\242\363=\016\031\301>\303\245q\273\227&C\276s\222\276>9\036\247>|.\035>|q\215>\361\0062;\236\006*>f\013[\276\017\250\210=\350\313\033\276\257\227\222\276@J\313>\033\271\203\276K\322\211;n5\016\277_f\n>\'\266\204>l\313*\275\".\311>P5\301>Nw\264\267\020\352\214>\360\353\215\276b.\205>\216+h\276\000Ox>,\271\235>\336\331\263\275e\301\205>\352=h>\021\302M=\233\316\276\275\3378\377\274\255^s=\006[\323>~\244\371<Ba\345=\337i\r>k\347\263>\216\257\232\275\225\221A\276\255\354\234<6\373\261\276\330\252N\276+$8\275m\365\344\275 \350\236>\031\265\257\274U\257\314\276)IA\276\242\"\037>5\351\245\276;\026\350>\325\013@>\375\214\302\276pS<\276\200k\200\276~\222\272\275\021\"\262\276\344\307\245=GK\274\276\253=\241\276\231\023\200>\210*\222>\314\207\206>J\023\245\275\027\203\346=]t\226\276\\\330M>\215}\367=t\034\240>\237\230P\276\370\326\312\276\rU\305>\344 J\276V\021+\276\211r\013\275#\3136<&\320^\275r\254\'>i@;\276B\352i=\314\024\366=\202\235><\315hQ\275]n\377<\034\301)\276\350 J\275Sl\t=\213\333\030=\317\364\333<@_ >\317\206J>O\017\366=\356\347)\276\r\246\201\275\237\377\271\275\311\002\377\275Y8N\275\361\236R=\202\202\032>\226\265\340=&\233z\276yX\334\276\253\357\235>8!:=|t\231>\227[\344\275t\331\351\275\231\371\007>\275C\013\276\033^[=\371\255\253\274\207\035\005\276JV0\275\014\214\254\276\375\206\320>(\366\227\274@\277\267\276\344\307\240=\022k7\2763\346\245\2754w\211>L\020C>\2364\244\274\343;\010\275\352<\360>\004*M\276f\225E\276\035uP\276\361[!\275\262\337\241\276\036\223*\276\025\325\321>\302\030\307\273\250\200K\276J\265\342\276\212\230\016>\263\200`>O\256Q\276\325g\007=\366-q\276\r\t\241>\013\264!\276\225nQ=\345\236\362\275\254dZ\276\006@\200>\027\233\223>%\016\253\274i\014@\276\330\300\245\274\252P\020>r\r`=\245\264Q\276N\303a>\027b\347\275\2714\326\273\361\303\323=_\314[>\245\304\n\276.\260\312\276\261\275<\276\350\234\004=\036U\323=\216\264\025\276\326\277\331>\214\355c=\334\272\354\275l\325k\276p4:\275\364\321\341<\202f\\\276\343i\354=\232\316\301<\200\224->\357\003\356\275\334\007\215\276w\245I\276\2721Y\275\362\324\212>\277x\353=\266y\372\275YjZ<\027B\236\276 \270\336\275\2241\207\276\275\214U>l!\023=\257\372\245\276\031\251\233<\0027\221\276\245\267\'=\336\024\031>h\007\237>kE\246>:D\322>v\203\003>\206\332\267>\030\'\234=X\014\254\2762\366\213\276\3217\202>\371\357\204\276\277\306\024\276\216\345\244=\024G\341>mI\003\276\264=\337\274\265\365`>Y\272D\276J8a=j\376\354=\365mr\274\235N\202\275\365\020\303\276\017\370u>-\316\330\275\342\233\006><\343\035=%\305\207=O\335\234>V\037\204> Xk\275\020\205x>\227\336\020>H7\247\276\307{!>&\202+>\322\2065\276\320\356\'\276\377-\215=\223#\303\275\371T\207>D1V>\313\215\003\276UF<>\247\210\244>\217\026Z\274\334\204D\275f^\342\275\236\030W>\007$\300\275)\007h>o_\241\276\351jH>E\017\">\272d2\276\"\003\332<iH\241>\265\214\245>ku\007<\2627\225>\373\320\325\276y\016}\275{VF\276\031\242\272\275\010\016\235\276\377R\251\275S2\315>\205\350\335\276+\253?>]\002\023=\242\254\242=d\342\235\276\204D\241>\347\324)\276\240\304\006>yj\330;\346\202H>\375\025|>\330\273\241\276\301o\265>\372\225w\273\217\266\221\276Z\000 >\211;\343>w\031\233\276\307p\223\276\r\026>>\345(\372\276\373\030\214=\024\265\331>\244\020E\275@\014\335\274i\332\215\275d\334\223>.\321Q>\354\264r\274\364\334\230>\272\246\247=A=\033>\306U\005>\254\316?>D\350\235>\223\231\234>1\320\217>\346\270\247\275\215T\265\274\"\255\357\273\354\234\276\275\003\312\267<:3E=\364,\035>\313\307\201\276|\027\032=x4n\276\336\231\230\276\252#)\276u \345=\363\225K\276\01761\276\372\214\375=\357#P=\\\307\030\276%\312&=6\373\270\276\033\367D\276\221\360\002>\303\261\032\276#1\226=\250\255+\276\224\003\026= |\255\273h\246r\276\316N\207<|\213r\276\201\243\223=\026\026U\276^\362\323\275\222\200\264>W\361\301=\374\225<>\336j!\276/7\231\276\riW>\223\347\360<t\013N>-\177\220;O\366\346\275OV\231\276\333r\226\273>\006\236>\034\344\031=\221\206\361\2748\221\022>\254YZ>:=\245>\375\336J\276\267\301=\276\030lH=\361\014z;}\251\026\275?\261\337\275r1\251\276\223r\377>\233\277\361=1\2105\276{\327\021\276<\264\213\276\377Ea>\233\031Z\275\005Z\n>\333\364\037>\270\320X=\220-\203<\263\370I\274\225\010\351>Wz\207\276\263Q\245\276X\007*\276\277\0241=\320\361\220\275\356\317/=\233*\261>KKk>7\271\360=\221>\'>\023[\224\276\344?D>G\304\225>\372o\251\276\035\r\344\275h\334\037\276nl\350>,\203\241>S&\273\276\247\nF>&E\226=\355B\244<\002\215\211\275X\0320>\313L\254\275\221\005\020\276\346\222\256>\310\277\352=n\310N\2769\034V=M\263\264=\230\022M>\337\322\262\275\237)\301\275\220\326\271= \330\342<\321\264\013\275\311\210\026>\302\265\006=\'\207}=\034o\235>\006+\207>\353\327\363<\306\2433\275\312\264i>\230\226\216\276G\217\225\276\366\260\240\276\242\215\220\275\347nH> \206\237=Z\207;>\320\360\032>\312 *=\034\303\245\273\305\265U>w\037R>\223k\332<\r\271\004\276\325\224\256=#N\252>\342DQ>\016\t\246\275\325\371,\275\010%\223>\204\264\332\275\330\025~>\315\017\031=\242\332\307=\206\375\013\275\rY\201>\246\205\346=\341\217\244\275\335J\376=\267\262B\276i\265\262>\027\310\233=\016\221\233\275\324\035j<L\235\250>\034d\346\275#4^\276\236\273\205>\363`\216\276[\315\014\2757\000,<\321\n\273\2729*\217\275\226#h>o\241\301>\303\\\025\276\320\316\274\276\374\320\177=\\\243\342\275dVn>\306\331\224=\275\005\365=[\255\344\275\315\240N\276\023\371\241\276\317O\251>\036n\370\275/\007\027<\333\312\005?\372<&>u\260J>\367h\255\275P+^>\351c\254>\267\337V\274\326\232\242\276\240\341\017=\360\266J\276NE\210<\347\350\265\276\034\300\223\276o5G\274\035ca>\226\373z>!#\207>)E#>\265\r\025\276\017\231==M)\217=E\342\243\276\r9x\275\0003\036=t\230.=\316\240\230>\304s\037>\340#\346\276\356^\203>\271\226\027>\344\3008>%\260\233\276V\333x\276\344\001\270\275\224r\232>\353c\216\2760\000\327=x7X\276\210x\260\275\314\321\207<$\3141\276?\366U>\354\337\306\275\rv\274>\327\312\231=\223\025\344<$$\357\275\231\215*=5UF\276\230\370,\275B\026\244>\305\020\220\276\337\036\275>\006*\307\275\265c\315>\257\275\006\276\203$6=;2\314\275\006\216\002\276/\206%\275#\271\326=\013\250\265=\220+M\276\276&\000\277\207\000\240>\362\202\246\276+!\223>\314.\337<\2529\031>\366g\030>\'\014\325\276\353\354n\276db\223>D\332\365\275>R\246<8\217\210=\373=\3259EX\003>\224%P\276*\341\272=\263e\364=mpA>\036\252\222<R^\264=\245Y\205\275F\030\244=\300k\327>{\336\211\276\037\205Q\276k(\006>2&/>~\320k\276a\000\261=\234X\335\275\353[(>\276-\036\275$.\006\276\271\216{\276\227\363\277=k\226?\276\203\"\243\276\354\230}\276\225\013\347>\236\251\256=\003\332s>_P\262>lqL<\206#\236=9\354\237\276\217\337;>V\352\346\273}\214\272=X\322D\276P\265\310=[\206t\275\322\206\343\276B\301\347=\263\017)>\013m(\276\217\306\215\275B\314W\276\022\325=>1\312\203\276S\331\006=\225\321G>\272w\203\275zk[>\':\037\276\323*\245=4\264[>\367\206\357=>N\\=\326\375\273=\234Y\005\276\317$\323=x|\230>oQ\201>\217\234\274\274\203K\300=\025 \202\276FV\204=K\244\216>\247\321\364>\233D\017\275\276N/=H\034!=j\340\024\275w\004\034>\241\217\035\276\321\036\033>a\014s\275\206\310Z\276\353\216\026\276\3117\014\276\307\350\261\276f~\n>\343\236B\276c(;\276M\306\004>\000\247\237\27640\272\276\345\201\242\276\261\305\002>\363\312\233>\210<^=i\222\210>\230\347\026\276L\201m=\034R\225=\222\363\212\276*\263\252\276\013\004s\276\\\243\316\275\356<L=\013f\027\276\233\021\332=\277M\256; ~/\276\230dH>\377\303z\275( \r>\322\301\334<u\275\266\276\273\370\214\275F8\025>\215\342\303>s_\331=W;\257\276\267O\205\2764^\250>3v\244\275\363Y7\276\365\226\222>\274+\022>\001\351E\276\222?`\276\232\274\203=\000D@>\327\224\222\276\260\257V=\030\037\240=\221\230\247\276\340\262\275\275\326\032l>`\217\031\2734\222B>\345\316,\276z|*\276\036\272G>\016\346\203\276R)J=\nM\300<T\304\003?\355\322\330=:\327\247>"
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\232\224\224<\212\312\177>\027\256\"<\177\0015\274\306\026\373\2743\016\223<\3149w\275\317\274t=\346c0>\276\265\231=\275\202\305=\352\200\322=\335Z\253=\267D\203\275\034\356\231>5\256\235\275@\333-\275\301\3265=\241\256\360=m\334l=\332\371C=\243r\275=\014\3167>\303RV;\265@\266\275n\356\356=\355\242\250=\276\010(>\326\372\240:\205\025%\273\350\3709>;@F=FJ\340=\013\266\350=\252\230\035>\201:\272=@=D<Lhd<^\004\310\274\214\332\335\274Q\273e\272FA\306=\332L\260=(\021\225=\nW\301<\256\372d=[\000\263=\341K\222=\200Y$>\245\027\260\274"
      }
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "Identity"
  input: "dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "batch_normalization/batchnorm/add_1"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Relu"
  op: "Relu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\241\351V?\234\025;?\261fL?~\234N?\357\211Y?\224+\\?\312cr?\\\305_?W\367<?\276,X?5\241a?G\223h?\036\250W?n\006W?\342HV?K\247I?\375\303h?\373\362X?N\234f?\202\234E?\366lO?\353r_?f\252[?\213\001V?%\327h?z\231_?\336\177c?\3533=?\000\374[?\261\257c?\235\315Z?J\313D?F\352\\?\303DD?\2727B?\231\333C?\322\224T?C\270a?\305#U?[\013d?\224cE?\354\250Z?/\257P?\032\224]?B\346g?\026\362O?\210DV?T\351T?l\331H?\323\377h?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "&\241z\274\221\255\3709/C\362\272\277\321\361\273?EB\272\251f\266\273\310\275\005\274\022\314\026\274\316[\026:k\003\203\273Je\377\272|\205\206\273%uc\273(\177=\274\312\334)8\273Q\370\274@\353\373\273\002\344\231\272\353\022\020\275\000\3533\272\016\202\032\275\022UG:\246\232\233\273J\003\355<\342\363\214<\211\034\375\273\007\235\367\272\010\225\006\273B\365\322\272\222\316\276\273\223#\307\272E9\\\273\"\0362\274\335C\214:\022.\271\2715\306\257\271u\241\014\273\311e=;\363\375Y\272.\216\374\272\213\244\265\274\225\tk8\344(\315\272\271\320@\274\2377\244\273\250i\356;\307\"/;^v\025:;`\247\272NK\246;"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "a\327\334>\035\231\270?\347bB?\212\252\305>\307\025\263>(\252\006?\002(\305>*\356$?\214\244\267?\244w\221?\306\2310?1\244\014?\213\234>?\241%\360>\267\256m?\254\013)?\326\000S?V\213N?\n\211K?\237\330\035?l]\375>.\217\'?\204\274p?A\222\373>\206{\307>K\006N?\n\375\034?n\207\201?h\314\001?\300\2569?\177\037\213?V1%?\\\3472?$q<?\321ft?\017D]?\221\222\365>\374\371W?R\033\030?\300\300\001?\006\317 ?P\353e?2\312\201?\213}\031?h\264\035?I\262\353>\251\373O?\357\265e?\217\345^?-\375\373>"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\330\353\007?$\275\016@\204 \227?z?\366>\310\242\234>7i1?\316\010\002?m\212V?L\234\355?\366\031\271?x8x?\347\365c?V\034M?\332\2502?\372H\335?\373\320t?\025n\255?p\032\243?\304\031\204?\274k\220?\307J2?\245?\200?\352\323l?\335\222L?\232|\362>\313\025o?\223\001i?\343\240\272?f\032O?\233!\223?&\001\277?t\310\212?\370s\213?\336#b?\314\204o?\323/\253?\250 \033?\230\017\321?b\366\235?p\2351?\354F\201?\2061\263? \372\265?$&i?\245\300=?\010\035\025?\274\315h?#6\301?\205\000\213?^\024\031?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add"
  op: "AddV2"
  input: "batch_normalization_1/batchnorm/ReadVariableOp"
  input: "batch_normalization_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_1/batchnorm/Rsqrt"
  input: "batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_1"
  op: "Mul"
  input: "dense_1/Relu"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_1/batchnorm/ReadVariableOp_1"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "batch_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_1/batchnorm/ReadVariableOp_2"
  input: "batch_normalization_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add_1"
  op: "AddV2"
  input: "batch_normalization_1/batchnorm/mul_1"
  input: "batch_normalization_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\206\022$<\301\024\004\276J{\016=\202\366\351;Fc\313\273\017\016\030=\275\n\251\274\256\331\367<\226\262\252\275\321*\232=\347\211\307\274)oC\2758\337\335\274S\321\025<\312`\033\275\036@?;Rk\032=\244\323+\275A\2634<\375\201\024=\230\360\341;m\271\311<wg\327<\017\305\226\274\365\261_\274\20220=\007\355\301\274\020\014\270=\334BS=\022\026e\275\032Mm=\230WR=\013\330\266;\316\021c\275\344\016\317<\365\265Q=\205T\216\273\004\257\'<D\274W=1X*\274\206\014D\273\337.Z\275\363\273\215=\037\341\036;\202\036\277<r\336Z<\213\315`;i\267\212\275>7\260\274s\245\251\274"
      }
    }
  }
}
node {
  name: "MYOUTPUT/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: -0.001669284887611866
      }
    }
  }
}
node {
  name: "MYOUTPUT/MatMul/ReadVariableOp"
  op: "Identity"
  input: "MYOUTPUT/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/MatMul"
  op: "MatMul"
  input: "batch_normalization_1/batchnorm/add_1"
  input: "MYOUTPUT/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "MYOUTPUT/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "MYOUTPUT/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/BiasAdd"
  op: "BiasAdd"
  input: "MYOUTPUT/MatMul"
  input: "MYOUTPUT/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MYOUTPUT/Sigmoid"
  op: "Sigmoid"
  input: "MYOUTPUT/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
versions {
}
