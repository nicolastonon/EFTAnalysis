node {
  name: "MYINPUT"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 10
        }
      }
    }
  }
}
node {
  name: "Feature_normalization/Cast"
  op: "Cast"
  input: "MYINPUT"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Feature_normalization/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 10
          }
        }
        tensor_content: "\000\000\000 \315\234U@\000\000\000\020\362\375\212\277\000\000\000\300\270g\373?\000\000\000\240\302\275\000@\000\000\000@\370\200\007@\000\000\000\300\343d}?\000\000\0000F\245[@\000\000\000`\223(\372?\000\000\000\260)\271\361?\000\000\000\000d>P@"
      }
    }
  }
}
node {
  name: "Feature_normalization/sub"
  op: "Sub"
  input: "Feature_normalization/Cast"
  input: "Feature_normalization/sub/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Feature_normalization/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 10
          }
        }
        tensor_content: "\275\314\314(\362(v@\000\000\020\362\317\242\005@\000\000\000@\'`\371?\000\000\000\300\365\272\370?\372\377\377\257)T\001@\000\000 \216j\243\007@\000\000\000t\323Ut@\000\000\000\320\'\367\n@\000\000\000P\302^\376?\000\000\000\000\025nS@"
      }
    }
  }
}
node {
  name: "Feature_normalization/truediv"
  op: "RealDiv"
  input: "Feature_normalization/sub"
  input: "Feature_normalization/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "dense/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 50
          }
        }
        tensor_content: "y\240\235\276\205w\310\276~G\032=D\242\003?\031x\000\277\352Ja\276 a\372\275\"\237\000;\203h\247?,\202\006>i\256\367\275A\014\245?)\213`>\274\351\n\277&\377A\277_\257\246>\336\326 >h\307\350\276\314E\362\276t\'\270\276P\262\205\275|\r\357\276\336\267\231>\300\336%?]\001\332\276o|\207?\016o\271\276\326CV=\022\010\324\276\246\236\023\276\034Z>\277HYK?\262\342\221\2765\272\317\276\377-\177\276\221\205\003\276\2355\207>\257\t@>\300\277\262\276\327\213\035?\344%\331>;\037i\274F\355\231?\314\335\355=\242m\357\274\244\004\262>\017\323\223\276eL\307>;0\004>\"\217\037>F\313O=\360\010\002?\036w\024\276\306\317\275>-w9\277Ja\360>h\311\223=E7\346\276\325\361\n\277#\277\321\275\321\222\272\276\217Q\t?0\341\010\276\027\033h\276\270\272\006\277\350]\215\275S\352?\277\261!\030\276\221\007J>\325\337\261>-\331\216\276@\203\206>\200\310H\277\363\316\010\277:\367\250>\01442\276Sgb\276V\263\013?=q\243>r=\236>\207\000\036<\334\253\276=\240\204]>\372s\345\276\005\013\277\276\246t\000\277\315\213\234=Ct\366>0\024\310=\310\241\"\2779?\001?\375\253\377\276\r\232\230\2767 k\276DU\243\276H\253\273\276\222\332\252>\351\0353\277;K\244>>\0040\276E\013!?\266H3\276\271\246\t\277\005\305F\277\200\314\034?6\344.\276\0258\273>\234\303O\275\337\236N?\266\232U\276\312RF?\330\353\222\276\337\021\200>\032M6=\323\354|\275q\330w>\'\336\320;Y\317\301\275-\275\207?\004\273\363>\365\255\342>\321\2068?\205 i\276\361\370=\277\213\023R>\256\307\345\276\037\006\213?\3623\301=\n\343G\275\331\316\007?@V\214>\233+D?P\271\250\275\370G\304\275.\215!\277\313\272v?[\231\223>\234\304(?Q\317\276\275\235\302\032\277\304\211\307\276O*\214\276ID\226\276\001\\\370\276\267C\276=Rf\316>=\027\201\274\232R\353>\303\344-\277u\217\364\275\222\330\221>a[\361\275\301\310\333\275iKq>fsL\277c\t\005>\211W\265\275\213K\203\276\340\232\307\275L\315*\2772\373\354=\355\200\314=(\'\023\277\017dP\277\177OC=\274TE\277\360\t\236\276\252\351\014\2778\0214>\033\236\020\277\2256\212=\'\305\220>\250\264\000\277\022\266x\275\024\005\005?N\246*\276\255\215$>\270\263T>\214x\021?\275\335\356>\203\336\n>r\232+\277kw\270=soA?\343\253\010\276\214\312\254>\212\025\207\276\346\300<?\317\360\304\276\031\230\021\277\r\225R>\331\267\354=\265\336\212\276\325\260\010\277\243O\301\275y\232\203\277\246\000F\277\323\326\366>\257\327\014\271\333\336\373>C\372\032\276XF\266\276\307\025>>R\332\262>\276+\r\2768\354*=\301\240\244<\364\262W\276:\361\"\276\275\263\337\273IB\254;1*\320\276\364\300J>^\214l\2770\035?>\324/\317>N\350\276\276\266\236\r\276\310\242\013?\204\317\227\276\234=\307=\256\\$?F\032B>\257\216W?\337n\022?\013\025\004?\217\324\324>\007\024i=\232S\330<\213jt>\025\210\263;\242\007\233\274\2200\000\277:\332\036\277\251\303m\275\200\002\026\27740\014?\364\264\377>j;\037>|\305\n?\342\351F>\2056\354\275Z[U\276?K\000\276\274E\377>\317\310\357\276\276\376\252<j\"5\2771\032\210?\213HW=\340N\006>%N\243=N\236y=\205\236\r\277\'\250\346=>\334[>I\207Q?J5z\277\014\307Q>\201\345\273\276\270g\323>*\260\220=-M\017\277vB\033>/+\032?b\236\037?:nD\277\375\304\020?m\205\007?\324YP?\372\206G>\200\243\227>\031\216,>ZW\n\276\021*X\277\030\2369=\3657\343\276\343\000\206\276VG\374\276I\216\024>\271\377\007\277ka\255<\256\262\244>|J\240\276\265V\377>\311\236\222>\231\024\243>\035\241\361\275\215V\305\2769\262p?\353V>>\374\016\332\275\347\371\336>\003\210K\277].Y?\344*_\276i\367\027\276\005\326x>\276OJ=B\026w\276\311u\315\275a\332k?\305\035\352\276\273\373+>\242\360\020\277R/\000>ev\203\277\263:\271\275\002\242\004?\225\247C=`\213\312>\344\023\211\275Q\212\263\276z\016k>\'\200\357>pG\215\276\242\264\321>\302\366\364>YGK?P\252\007\276\362\367\023>$=\023\2778\272\212\277\350\373>?\214\363\035\277T\304\262>\305?\371>\tr\007\277\216\177\213;\351|\n>\335\201\034\277n*\344>\213\335\217<h\265\007>\251a\265\276\215\032\213\276\003-\001\277ES1>\321{q?\256\022\250\276\313\371,?\004\007b\277B\344\325>\241\312=?j\276\217>\242@\355\276ec[\277,08?\271\007\357\276e\212\017?\235\"\332=\213EK>\216Qx\277{\303\206\276Rs\032\274\200h\001\277<\2150\277\252\003\265\276\363\211\373>x\352\003\276\220,V?\376,\221\276\254\301\013?\225aE\277Pk<?\031\264q>\t\014\276>)\227\034>m\351Q\277\300\013\317>XO3\275f\200\"\277U\177\007\276\024T\200>Cw(\276nmo\276I\200\315\276v\257\027?\364(\016\276\207i\301>\351=&<V0Q?\324\364\017\275\3715.\277\221\210\'\277\230\303\320=\371\340\352>\236\366\305\276\0279`\274d\013\027=\362B\t?|\023\343=L\035\355>\277\374\351\276}\004;\277\2064V>\310y\310\276\0066\237>u$d?\263\244\353=\027\234\274=\251$\313\276\'~z?U\327\027\2773^\215\273\375`=\2765\207q\277\212\227V?D\r\314>\272\302\331>\214\330\025>\263\016\344\276\347\037\244\275\324mD>\211k\"?&\263\362\276\253\261\345\276e\034\343\276b\262x\275\010\033\320>C\036%\276\374\360\260\2766\0235?c\r\277\276-P\330=g\250\230\275\006b_\276\355\275\257>\000\243J?\320^\254\276\214\327\002?g\246\177\275\002t\270<\353\247X\277\266\306F?z;?\277\214\307\272\275qA\334>\272w\277\276b\353\223>\205\333\005?\317\027\033\277\315\032\305>.\343\321>\273K\363\275X\226\245=\366\320\246\276\232\326\267\276\005gF=\341\022\312>\014\223\220\2765\301 \277^\301M\276\373\243\221>\263\374Q\277\367\331\274>\2101}\275(3\316\276\340\241,\277\223\326\026\277\3665\305>\360\320\233>\253\000\244\276\310\030\034>o\375\003?\322\230\016\276\357\245\027\276\365;\251\276\301\'\371\276\317\371o\275bh\323\276\"Z\336\274\343q\355\271\255\320\347\2762`H\277\307\201\212=\014\300\370\274~\274t?\347\"\005\2770\234\373\276s}\261>\026,\216>\300\032\033>\024\233L=\374\200\022>\242\300\214\276 \263??\305\214<>1\001,\277\013$\001\2770&\350>\004\222\267>\023\025\204>#\234\035\277\335\303\020?\206\321Z>\263\355\226\275\023\252\300\275\351\303\270\276\016G\277<"
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\307&\003;\301\367K\275~\215\032;\211:\321\275\375w\217\273B\014\'\274M\022\264\274\004\025:=\314\177k\275\314eu\275\274\362\235=B(#\276\317a\220=\255A\033> 7\245=\360p\343;\222\203\237\275%<\266\275o>j\275\010\325H=9W\232=\322\366]<8{\226\275D`r\276\000b3\275D\300\352\275\336j\240\273cx\227<\031\230\206\275i[#\275)\245\026:\325\317u\275B^\343\275\004m3<\322Y6<\022\026\216=\217W\321\273\003\306\023\276\233)0\274\020(\216\275\n\031\321\275\353\202\022\2759<\215\276\237*\250\275\356]E\275\032s\267<\300\327\217\274\272\267\226\2753\220\010;}h\360\275"
      }
    }
  }
}
node {
  name: "dense/Cast"
  op: "Cast"
  input: "Feature_normalization/truediv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "dense/Cast"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense/Relu"
  op: "Relu"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "&\341\204?\277\254q?KZy?\037\013\215?R\370r?Od\203?G\307v?\235E\213?\334\224\215?\224\327\217?\335\316s?\3579q?\222\304_?\247\217\210?\327+\206?<\267\210?\342\022\212?\3736}?ZEl?LZ\202?j\377~?#c\213?\264\250Y?\325\032\212?\254\306y?+{\203?\036\224l?R\245x?\231\337\213?-\251q?\200Uw?\310\243\200?\231V\200?\271\376k?\242\223e?\323\345\210?,\275h?-=\210?tss?\336\330\206?\337\204\205?Y&h?j\367\210?>y\222?r\233n?F\355j?\345 p?\372\237`?\204/n?N\232m?"
      }
    }
  }
}
node {
  name: "batch_normalization/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\021>d<J\333\211\274\215\262\n\275e\244M\274\347\210\252\275\246\352\223<}/L>\234\3150\276\210\032?\276y~\341<\220y\032\276\004\330\024\276\242\273\357\275A\201\023\276neN\276IR\324=5\314\277\275\2153x=\235e\227\275!\371\t\274.\345\211=\227\320\234\275\276\267\355<\200\202D\275\266\203g\275\321\250]\276|\366#<\302\013^\276\004\030\001>LIh>\370\336\205\275\324\250\225\275\202\313\014\274\261\367\024\276\372\330\363\275\233F\006>c\245m=\373\221\r=6U\021\275\333\"I\276\3102\250\275\341\341V=Gku\275\026 T\275\355\332R=x\331.>\310N6>\352\200\373<\300O%\275\232\211\t\274"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "uqO>\277\025\200>\007Yu>\277e\207>\224\334\211>\202?\t>>\2541>\252\320\236>d\362\252>s\340S>\323w\257>\221\270v>\360\211\202>f\336\251>\372\\\251>\026\251|>\362a\236>\"\251G>\nr\216>R\236\232>\037E0>8\"g>\246\353R>\361\303\247>R\207\206>\354\t\215>\212\r\210>\014\310\234>\246\030v>\201\036;>\325pe>\345\323\236>\363\017\264=\216\251b>\211\301\\>\202\221\243>\263\342\\>x\365z>\nO\207>V\367\274>\234]\226>\234\372\376=T\300\202><)\253>\316Zf>\260\325\213>\273~\002>-\207\210>,\366\242>\"{\023>"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\324t\314=\304\214E>,\035F>\246\276\201>\002\316z>\254\017\211=\250\007\366=x_\221>r\235\231>\023\\\361=\302\'\224>\365\310\205>\234\274\034>\260\362\203>=\323\241>!\222%>\243.\207>\3442\365=\255\327\212>l\227\206>#\311\233=\'\330@>\330\331&>\0343\365>*\177\241>\245@\265>\356FY>\222u\226>aj`>#\024\360=\033\233,>5\274\213>+\225#=\364>G>\221\357*>t\201\220>\364t.>$Aw>\013rm>2l\324>\202\366~>),\211=Z\215\255>\230\014\250>WDR>\301\300B>\303\232\210=_\272E>D4\215>\230\370\227="
      }
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add"
  op: "AddV2"
  input: "batch_normalization/batchnorm/ReadVariableOp"
  input: "batch_normalization/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization/batchnorm/Rsqrt"
  input: "batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul_1"
  op: "Mul"
  input: "dense/Relu"
  input: "batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization/batchnorm/ReadVariableOp_1"
  input: "batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization/batchnorm/ReadVariableOp_2"
  input: "batch_normalization/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add_1"
  op: "AddV2"
  input: "batch_normalization/batchnorm/mul_1"
  input: "batch_normalization/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 50
          }
        }
        tensor_content: "P\304Z\276\312\310\317;\007\215\220;\030\030}\275\320}?\2755\'\242\275%\345\330\275\212\344\314\276A\026\r=*+b\276\026\211,>\3559\031\276\3405c>\273\215\266\273I\266\002>A,\253\276\004\t\212>\022qT<&VU=\242+\034\275\033\356\027=1\236\005>\3564\256=\201\357\321<\2441\340>\371\223\226\275\262X\244>\226\374\227>Y49=\315\265\222\276\266\000D=Th\023\276n\224\256\275\311\254\332\276\366\260/\275\340c\037\2764\003}>\352\305\356=)\0143\276|G\345\275\276C\'\276\253\323A\276\206\221\243>\234Z\202>vyt=\233\364\312\275\3003\315\276\007\340\242>\223y\351<\226\034z=\200\225h>\357\316\240\276\347\032\240>\253\350\204\275$v\211<\016`\324>\224z\204\276\265t\324=\021%a\275\236{a>;\303\305>\353\257N\275d\304\217=]\317\r\275\364\221r>v\024\357\275\001\026\262\276\303}\217=\367\267\351<\223\363\2609\353K\034\276\031\243\300>huo\276_\314\226;\237\217\n>r\221\320\275\326\343\271=M\333\340=.\300q\275}\332\357\275&\307\013>\204\232\004>\355\375\016;\335\230\341>\333\t\203>\253\225m>\233\213\225<\242\307\233\276\017\022\210>\260\022#\276\347\314\233\276Y2\304\273\004\277\024=\230\2644\275\302B{\276\312\346Q<\261\277\316\276\255c\007\276\n\2406\276\316m\235\274Ri\335>\330cH\2767\034\225\276\035\222\323=s\273:>\237\233\336\276Q\003\010=\351 \300>\325^\331>e\224\033\275\201\201\016\276\342\005U\276\272\020\020>\305\247#=\334R\\>|\247\204=\007\262K>\231\241\232>&\212\251\275\241\001\246\275H\333.>\340\202O\275\032\302#\276{\000b\276\332Y\226\276\325\253U>\260\302\213\275!\024\210\276\375\025\317\275\211\270\227\275\270xu>u\303\265\276\247L\026=\274-x;Z[\201\276\3058)>\346Y\313\275\326u\304\275p^\244\276\006_\341=3\r7>u\023\202\275%\2638\276\341\273\341>[\311_>\216z\304\275\300\222\317\276$:\223\2764#\230\275\223|\201>Q|\344>0\214t\276\265\010\332\274\n\232\252=\\\207B>\337ZG>\373\315\303=\242\276k>\210\177\202>\021\014\216=\355\356_\276\247\253\222\275\325\322\007>\254\223a>C\371\247\276ErH\275t\364\370\276?~\300\276\265\332L>\375J\276\276F^\221>\212f\237\276#\351\214>\252\221\306\275{\227F>B3(\276=\325\016\276\276\316\311>\004y\207>\311\256\277=\343\207\\\276v.\302\276\350\341\225>Y\037m>\202\317\361\276qH;>Q\367S\275Cs\306\272\357\006x=\361T8>\214|d>\367\"[=%\000i\2767V\247=P\013j\275m\020\306<\034\223\211>\233h\253>\023\276\233>\374\351\362<\214\346\"=\002\323\371=\367\340V\276?\252b=s\275\006\274\375\334\365=\214%\n\275\352\356\262\275\222\234\270>\013^\203\276.=\227\276.a\177\273\374\022\275>\006d\007\274\37473=i\017\252>\235x\021\275\001\330\244\275\236Kx\273<\244,\275s\334\254=\374\354\360=\253\362\220>\264\371\217\276#\326\351\275\363r\261\276f]\252>\261H(>4\256\233\276\332a\303\275\241\207\240=\"\020\205>g\212{\275!n\347\275\027\206\000\276O\003v=\362\220\207\275ss\201;\221\251,\276\340>*\276j%p\276\363\337\204>\3045\321>\276\324\371=\201j\207>\217c\r>\333|\306;kZq>a\270\375\275\354 \251>\214n\222\275\311\352\277>}dM\276c\332\322=\253\361\237>\311:^\276i\003>\276\370\311\'\276\000\367;\276\360\354{\276;<\300=\027\017y\276\216\016\202\276,\276>;\224\373}<\271$\311>\367U\247\276\232a>\276\367\372[\276\235\224\021>\255\375\360>\266\316}>\277\273z\276\265 \000=\350\325\200>\275\215\227\275\233\300\177> \274\037\276\277\316\230>\257\310\250\275\273\352\337>\215{/\276\020\274\340>\027\271\023>\276\255\354=\342f\267>,\r\264=\353\246\326\275};\225\276=\353e\276I\242\373=\220\301^>n;\227\276\324d\347\275\000\201\204>W\210\020>:/e>\321Ls>i\2337>\212{{\276\262\204\267<\325\202\t>A\303\361\276r\333\n>\232v:>K\266<\276}\016\010>\310\373\222=\367#r=\222\217W>\362\253\014>\356\214q>\374\337T>\310\376\004=\222\025\271\275\034\343\317=v5\252>\256+\257\2766ei>\203\241\222=<r0=\250\323\016\276\302\265\222=P\314]>\213h\022={\331N:\\wF\275p\251\302\2767QQ>\2634\251<\213\230\363\275\265 \223\276\335\316c\276Q\342\307<J\366E\274C\353q\276\020\323\305>\303&\330>\342 \214\276\342\256Y>\346%\223>\325\355\262\276\335\223n=2\306r>\337*\346>\255\223\213>\005S\005\276\021\232\216\275!\0138>\342\341\202>\007\205==\'B\202>\262l<\276,\333\024>I\262\347\275\204Z\216\276\276V\274>d\235~\276\t\210`\276\373\2369=\325S\360<\225\202\237\275\036\312\'>\035@\325={y\245\273X\341\033>\264\321\035=\315\233\254>\2018.>\236\037\365\276eu\234>\206\342\235\276\336&H\276\032Pg\276\317\032\221\274\277\261\007\276\271\020\206=\023Fv>\317\247\204=9\272[\276\0349\222>\317!@=\276\312j\275\364}\272\275dK\005\277\204\325\344=\n\035\264\276\276y*\276\014\221\226<\322\272\267\275\267\245\000\276zE\367\273\222F\300>5\256\207=G\343\247<\262\362k\276\272\356\244\276\212\252;\275%\004\221>}\365\353\2757\037O\276\'\000\203>~y\035\276\206#\">oQ\222>\033\304\347>\031\324\362\274\344\261Y;N>\235>V\331@\276\027\310\313=\t\275\236\275\234\310W\276%\311\314>\217E&\275_\370\365\276\311\207\202\275\230e\355\275\361\224E\276L\000)\276\246=\325\276\231\333K>\330]Y>V\322A\276\364m\250\276\276\234,>\201\021h>X\327\343\275\263\301\310;\331\366\255\274X\000\037>+\220h<Q\2051\276\322T\251\276>1&>QZ\317=\205*\236\276\270\324\317\275\313R\327<:&\327>{\271\346={\300\220\275\245\364Y>\345F\214;\037\225&>\032\312\211\276\206P\362\275\024\337c\276\016\365\326\273\'\365\376=\361\310\200\276\373^\272\275\037\372\251\274\'\376\002>[\251\"\275\213;\360\275^\233t=&\323\213=}@8\276\313$7=\302\301\254\275Gr_=\230\374\314=\345L\270>\276\324\340=>\023\276\274\214\206\221\276\314\220\023>]9\277>\345\301\000\276T\201\253>\276\220\026>\373\267H\276\235\332\013\276>eU\274u=3=\371?\347\275\307]\222\273\273(\340;\035$R\275\362\0234\276V\312a\275\221\307#\275N\032{\275mC\220\276\035\253T\276\306\3568>W\270e\2769\226\220\275\213b\315>\365\261\235=\020\303j>XR\360\275n\364\234\275+D,\275=\030\270\275\377\301~\276\2568j\276O\201\376\275^\242\316\275\000\322\024\275\347\266L\276\n\324\010>\223\223\321>\272F\315;\021Q\003\276\270\332\002>f\336E\274\177\345\211\276\265\373b=\226\266\010\276\317?\r=\324\312\330\276\265=\343\275G\331\212\276\205\251\033>v\330\'\276\332\300*\275\273/t\276g\235\017>\263\177\212=\001\270E\275\217\275k\276~\315\307\275L\273\213\276\210\306*\275>k{=1y\330\276\234_\272\276-\2359\276C?,\275\013\201\345=\306\025\003\276\204\362%\275\232\274\224>\224\350\365=a\356[=\177\362\245\276\\^+\276\240=z=\002\3004>\370C\306<\227!>\274\271N\216\276\335\344\370=\212\310\216>e\022\002\275\271\263w>)\247)\276\327g\366\276\341K\271>\203\335j=\300\206e\276+\307X=uK\235=b\264\231>\204=\302>HN\356\276\373\357\247=\3033\232=\355\016t>\312\3069\274\371\366\'=u,a>9\255\210=\340\323\007\275n\232$\276Mh\244=\330 \250\275V\305<\276%\277\025\276t2\025\275\'\246%\275\230\026\265>u\236\304=\246\000\032>)) \276f\310\243=\023c\242\275Z5r\276\002\3364>\267\254t>\024\370H\276\367&9\276\2320\343\275\323\002a\276:\261\243<\323\254<>[&l\276\377\377\016\276\307\256\016=\347\370G\276\237@\030>?e\206\276 2\021\276h\366\233=\262\277\025=\336e\203> \227V>\330\263\306>|!\202\276~\033\226\275<\371\302\272Q;\266>\315\264\032\276\302\335\033\275\313\2053>Y\355&>\367_\371=\243\'\022\275}\000\003\276?f%\276A\300f\276M\036\032\274\203I\247>\207\232B\276\273J\223\275j\247H=\303\262r\275\315\2018\276a\245\236\275\222\251b\276P[\027\276\251\026\207\275u9\027\276\223\277)>\344\301\273\275\340\213p\276\351\333\253>-\216\364\2752@\345\275@\203\366\276d\334P\275\275d\262\275A\221J\276D\247\321\273c\001\364\275?.\007\276*\035\215\275z\307\254>\2429\006>0\004\364=fT\350=b\356\234\275\336Q\031\276\324\006$>\363\005\364\275\016\204\024\275\232u\312\275q\251\303\276m\261\233>\300o5\275\023\260.\276\252tv\275_\242Q\274$\302e:\310\313\243\276\342\262o>\313\243\240\276q\277\022\276\255\031\315\276\265\354\017>\010\341\205>yL\315=\216\332\237<Z\211\030\276FPP\275\\\214H=\257\264\034\274\032\371h>\210\243,\276m\375\257>\220\221\236=\226\230\024\276\203Y\003\277\255[\255<\306\265\257>\254\203\273\275\356\003\340>E\214\236\273\003np\273\236\246\023\276\255\237q\276\216\275\264\275q\220\031\276z~g>\001\177\017\276\332\277g\276?ZZ\276\226]0<)`\260\274iT\202>xiM>\307\226\023\276\177G\357>!\342\210\276@\322\344\275\253v\025>%\312f>\032\210\254>\354\244\007=\245\335\210>\271\336\2058\036q\235\276H\232\263\276\035\031\004\276A/_\274\374\374\365\276&n\307=~\250d\275`\353\330={\252\215<\377:\374\274_,\304<\265K\320\274\370\205k>\256t\361=U1K\276\214T\232\276\256\006\323=B<.\276\345\361\034\276\325V%\276\323 ^\276\202\306O>;\311\244>k\005\200>\234&f\275\202,+\276u\037\216\276\021qX>\307\355\324\276/F\231=\340\374\343\273S\352\246\2754\t\010=L\346\246\276\007\224\206\276\357\212N>\245\215V<\206\262\276\276\344\370g=\266\365,>n\014e\276\263\026a\274\362_\302:|8@>\216\270\254>g\202\224<?$\305=\221\250\230\276q\315f>\362\364\262\276\345\006\032\276\360\210\033\274V\371\277\275y\200\372<\257K\364\275\242\n*><R.>e\314\272>\270\235\306>\231\253\305=\306\305#>\345\305\256\276\373\311>\273\200\364\310\276+$U\276\013U\214\276\311\277\n\276\014f\337\274T\214\235>\\\300{\276\337\024F\276J\274\223>~\356D\276Oi\272>\177\\p>\277\343\310\275=0|>A.\302;\351\343\221\276\271\365\312\275\312\347\035\276$\312F\276\036\226`\2746`o\276\337\r2=r\322\024>\006S\224>:\343\t>\036\005\267>\2659\306\275\235\201\006=\034\017K\2758\216\351>\302\020\230\276\276T\254=\350\330\321\275\323\010\261=\215]\023\276\210a\037\275\\\010\002>*\263\021>\211\004\215\276\216\022\276<\372\211\032>\025\276,\275\275r\027\275\022\347j=Lx!\275\250\003\034>M\022\244\276OF\320>%\323\252>\222\324\335\276tr\302\276\365\370e\275\273\0049\276\324\356\347\276\360#S\276\254\337L\2761\t\017>\316\205\276\276\323\327\214\276\005\261\237\276e\227{\276\006\035\221=I\276\n\275\\8\002>\r/3=%\226\302<NM\272\276?\177\315\275\275g\220\275r\313\301\275\224\030\245\27687\302>\t\306>\276\tGS>1\257X<Sv;\276\203{\013?\3075\217\274s\273\216>3\223v\274\355\272\306\276%a\200\276\306\370\211>2\231\022>nNG\2752V\305>\035p\300>\337\014\313=\316+\322>\3460\037\276\245\343\231=*\333Q>t\343\343=\326{\310>\030T\177>ZN\243\275\310-[>_\235\213=\236\3150\276f\213\027> \245f>\025Y-\275\027\3558<\235\244\301=\362\010\356=\264]\"=\362;\265;Zi\237\275F\375\311\275}\245\307\275\031kR>P\025\277\276\225~\013\276\271\330\n<\214v\247>\275\\\227>FE\342\272\252\323\370\275\256\235\230=~\335;\274\226}\306\275\373QV\276#\362J> *\313>`\005\036\276\227\311\026>$\264&\276\353\252\352\276\270m\232<\237\313Z\275\223\300C\276\037\274\310=\375m\326=\370\013\327=\254e\240=\226\331L;\226g\224\276XG\230=\342c\220\274\035\231\004\276\200\247\226;\007\r\226\275,\307\300=\254u\215\276br\276>-\203k\275\315i\t=\246\372\013>\3246\222=J\034\221\276\210\264o>\300\353d=\371R\262\275A\365\325=pi\304\275\"\302\262\275z\257y=s\246+\274s\306\251\276\317\266\313<X\365\315>Dli\276\301!\316>\027\244\375>\372\300\013>\272\201\010\276t\225\360<\262\376[\276?\355\217\275\002y;\276\342\325L\276\030\016T\273\356?N>\223\344-\275YCu\276a\\p\274^\333U=_Z\255\274\224\223\243\275\017\243\310\275>\276\256=\375\010C>\017&R\276A\264K>\024\276\234\276e\013\032\276\242\335\265\275\362\201\016\276o\020\241\276W\257\275\273\237\3414\276\323\231\037\276\307\241B=\202\355\r\276\316.}>\360\001\260>\231\320\237>x\202\013\275\032\3344\276\370\233\000:\005\317\203\275j\252\035;\326\216\232\276e(\303>\014\217\265<5M\023\275Hk*<\243[h\275\241\241\370=R\372x\276\327\267\267\276\030=W\276,U_\276 *\004=\"R\245>\305\337\035\276\201\371\274=&\240\242<\214\205i\276\367\373\243>\255\351,\275\022\345)\276P\245\275\274\266\203\317=K\372\301=\310\301\013>\311jv\276\324\262r\275\207\376/>\347/U> \377\215\276/>\321\274\027\\\211=\2042\217>0\252\031\276G\221\256>\305\254\273=\220\373\013\276\375\260W=\030\2055=2\032_\275\017\245^=\252\325\036<9\362H=\304\311\225=Q}u\276^\033!\276\"_o>\333(\323=\2507c\276\317\347[\276\326nS\276=8\250\274mY\323>N\360\232\276\340\261\203>5N]\276H\353\334=%\211f\276\022\247F>v\002\260\276\361\203z\276\271\316 \275\004\223\340=\341\243\224\275\277\030\201\276\246$\001\2767\013\016\276\374\001\026\274\215\217I\276\225\377\207\276\027R\262>`/\302>\024J\302>\364t\212\276t5\212>\014z\255\275n\330\026\276\213\205\365=1\264\216\276|\355\325=\317}6\275r\375\\>!\275\014\276ZG\307\275oW;>m{\031>\230\277\345\275\332&\354<\366\300\027\275\376\376\'>Bl7\275\334N^\276;\214\006\277\221\212`>\342\315\023>@$\r\276U\262\316\276\316\262\264>\024\334,>\2647\235>\216\016H\275\222/;\276\006\213\010>:4\236=%8Y\276\031Ux\273\353Or\276\020\2543>\004\022\200>j\207\004\276\263bG\276]\336\013\276\024\217\t> \313\260\275B\'\222\276p\200\031\276\2157K\276$S\221\275vVh\276c2\235\274H-Y>\260\3402\275\263\230\002\276\306\031\253\276\034\253\316==\207*\276\302\316\335\276K\336\221\275\005\332\321\274\331\037\212>\245\300$=\215\335\362\276p\002\247>(\246\262\275\372\266t\276\231\270\003\275V\334#\275\003!.\275R\027p\276m\2538\276W\024+\276\361\026\265\275\225\013\240=\353\240}=\252\221\222\274\t\026>>\030E\223\276\333\350\021>\017\007\243\275\314pR>\350H\016>5\370\277=\252\272\026\276\025\313z>@\035\025>\266\2335>\002\022\014\276\310\345\215\276\250u<>m&\243\276\rQ\023\276d\024\232\276\314J\237>>x(>n\263\026>l\034o\275\356\261Y\275\260\026\213\276\222g\203>\306\263\313\275\016/6=\031V\204>\323\007\223\276\'\213\335\274\321\314\363\275\"\234\366\274 \242\311\276~W\240<\025\351O\276\002\003\311=z\276\323<:\206\022\276,,+>,\024\320>\317\024\031\276\010_\007\276|\226\271=\350|E>\201Au<\263\004\037\276WzC=\027\2477>\242\001\t\275\223V\334=\211q\215\275Dc\332\275v\242\371>\014u\014\275\343\216\244=L7\275=\376e2>\376\\\301=\024\371\316\276\360\241E\276\302\231\324\274F\230\261\276{\211\300=\356\2277\276\262\371\277\275&\200B\276\313K\322>[\225\337>I9\264\276\005\315\033>lo\225=G\2657\275&\250\016>\306\262|=\246\242\305\275v\370\234=\230x\207\274e~T>\335\217\030>\367\250\270>\310k\210\276\217;p=\336M\224=0%\225\272\341J\027>E\341\320\276\207\246{<C\307G\275\322\330W>\324\206\305=W\364\224\275=\307\026\276c_:\276Tu\323;.\320Z\276\020\226\"\276\3262E=\314\267P\276($k>\206cT=)^\213>\342\370{;\303\361\377=q\213\017?G\":\276\266l\253\276d\250\307>\256\314\217\276\215\275\265=\"\027\244>53\313\274\323\340n>\002`\014\275\200\022\t\274\035\021t\276mDG\276\362\200(\275\345f`\274\017P\034>H(V>\325\030\334\275Z\376i\276\223\221\256=\346\016d>\001\204\341>\330\257p\276\366\223\003=\001\210P>J\025S>\253\244\224\275\221\013\005\276`\276\267\274\301\003\201\275\024\242\254\275&\360%\272\263C1>f\216.>\347\006w=<QF\276\001\246S>x\033\207=\314\226\264\276g\031<=\322\251L\276\342\243G>J\361\n>\341\'\001<mu\360>\334Fy=\243yx<\256!\021>D\316\255\275b\000=\276\265\307&\2767\325t\276\026~\246\276\0342\257\274v\235\337\275|\372\032>.^\\\275\200\023\212<\232\006K>\177\037I\276\321\023\316\276\351>\347\276*\332\212=\233\t\205\275\343*x\275=\244\256\275u:\214<g\221P>\310\262\021>T%\236=L\230\024>\365\375\213\275\025\211\306=\214\305\247\276\234\355M=1WK>\266\313\204\275/?L\275\2655\202\276\245g4;\234$\351\276\316\353\\\276;\341\254\276[\302B> \260F>BS\033>\350\366T>i\364H>\0024m\276\374\313\r\276\334\320q\276\240\234<>\033C\201\275\364\035\255\276\002\2453=\321\264\301=\357\211\025\276\377\234\213\275\214\307\220<\204\313\240\275\307\244\351\273hi!>\351\227\210<\357\250\235>\322\324<\275%\013p\276\245\253\010>Q?]>\361\352\304\2755\355\360\275`LP=\3120I>\202\025v>\035\327\027\275\253{i>K\n\335>\342G\322=LIb\276\014-Y>\346\303N>\001\320\004\276\307\356y>\337k\303\275\'\204\240>\221NW\276\346\256\223\276\247[\215\276\230=\000\273\365\005\\=wuJ>\023\3152\276\374y\202\276\262\026;\275\267\300=\274\375\352W\275\020\303\326\276\0200\247<\224\201\020>Y\003\022>\255@[\276\304v8>(\020\322<\030\275 >\2637f\276\231\021\233\275\344\034n=jJ\272<\025Sc>Z6T\276\364\220\212\275\245K\250;\231\001\257>0\342V>\004\023\235\275m\313Q\276\352\352?>9\'-\276A\306\253\2762\001\322=\345^I>g\325\230>\260\314\177>H\200\247>0\204\277=\225)\313\276\377~\230\275\324\375\341\275,z\236\276wf\200\275\311x\025\276\226s\276>-t\016\276\305r\356\276M\266\345\276\010\237-\276H\377]\276/\330\351\274(\005\220\275\202\3766>\245\240\263\276\335\366P>\226P8\276\276\2465\276\257A\240=#3b>\035c,>N\200\206>\217\2045\276\364\220K>\003B\213\276\376\t >\315\245\211<\240t\230>H\264*>\027J\376=\305\324\037\275f\364\t=\264\304\302\275t\201\362<\246\030P\275\225\017\361\275\tt\265>M#\232>\334a\251>L\004G\275J\350\\\276\277\206y>YA\370=^\243\221\275\357S\005\276\233\273\303>\250\272\334\275P.\351\273{[\314=\365u\217>H\312\314>0\365\027=\357@\247\275\212\\u=T\225v\275O\357\002>\324\266\323\275\202\346\311\276\306-V>`f\253\2754\340\334\275<fy\275s\333F\276\365\312\276\275\321\357v>J>\20297\275g\276H\240\302\276W\306\311>b\243\227\275t\264\345\275R\362\354\275\224\220\016>~O\326=an\213\276\250Bu\274)\2510>1H\013>\320\007]<\247X\001\276\346\027\330\275\366.\231>\331\r\027\276E\300{=m\\\226\275[\261\256=\255`d=\272@\300\274b\364\232=v\223e\275\330\343\237>\036\341\311\275r\346\300=\222,^\276\346\251\266=G|\220\276~\204\235\275\225{\200\275}\300\226\276\240\325\202\276\256^\263>\017\311\277>\326Q\371=\250B.>(}\033>\322YS\276Y\333\242\275\357.V>b\tT>\271>\267=a\256E\276\217L@\276\251JH\276o\252\245\276nS\310>\350\204\231>\337!\253\275\364#\343=\221O\224\276m\277\227=\274\025,\276t\037\315>\330g\320\274\021\330\337<;\322)\274\314\232^\275\260\323\275\276\236\217\321<-K\016\275\302\250D\276\355\323\360\276\035{!>\206b\003\274\241l\327=H{\240\276\370W(\275P2\227=?\000\236=\353Dn=Y\301\000\276\341\033\234=\327\212\263>7\376\342=~\362\356>\005\314\261\276\026C=>c/\276>\237X\224\276\302\027o>\231N}\276\000\217O>\277\341`\274?\313\010>\344\373\355=}6\026>\'\351\217=\n\036\252>\013\375k\276\257T(\276\207\221G>\217\3635\276o\211\215>\352\344\353;V\027\247>\214\332H\276p\256\272>:!\314\276\257&\273>\244\343S>\337\201\177\276$.\245=z4\027\276\364$\250<%l\236\275\005\024l>\205\311g>\006]8=\214\004\245=\277\250\007>\016\335\256>\036\256\322=Cpk>\242\030\266=e\333\265=uP&>\005\211\226\276\033\244|\274J\307\241\274\346\344\246\276{j\322=\257\222\255\275D}S\273\342\275{\276L6\334\275\027\307\273\275]\362\254=\335dx=\021B\267\276\001\204\205=\367g\033\275\315,\220>\017\221\330\275\0035\242\276\365\233\212\276beB\276j\207\200\276vC\024>\242s\204=6\343\242\276\324\033]\276\351\023[>\331\226\257>M\364\306=M\345\365=N\277\244\276\001\224~\275\360Y~>\354\260n\276\217\316->e\326\237\276\230\006\227>/\247\361<\317*Y\276\342\t\346=\3541,>;\026\013>\211\t\'\276\262,\273\276+\223\261=\344\361\032\275\202\224\332\276\010\312\267\276\315\0173>\202\273A>a\021\203>%1\371\274\205\353\241\276\177$\362\274#e\005>\302G\026\276\225|\345=-\250D\2763m\204>\343\266\203\275\357\365\353>\264\250^>\266\343/<\025\035\030>e\363\n\2762\022\002\276\371Z\234=\016\204\223\276y\225\300\275\300N\230>U\220\365=\036\246\001>\337rQ=\005\t\242<\2272]\2766%\001\274\271\363\007\275\205\2270\276\311\303\256\276\247\344;\276 R3\276\372~\307>\221\242\257=)\022\220=\346\330\201\274Yj\230=\237\243\213>e0\224>\241\"y=\373\035\302=\255h\346=`\366\004>\316\316e>p\030\034<\236\211\002>G\324\300\274\233\344S\276|V\274\276Z\362x\276\003\263\222\275\354N\020\275\022 }>\257\222^>,&6\276\352F\307\275\222\213\210>\035\231\370<\326\021\214\275\335\203h\276\275&|>v+\n\275_\372(>\326\363\214\276\355r\275\274?\327x\274\235nk=\204=j\276\2516\244\274\266\256\354=J\251\234\275\264X\016<\341\200\n>\232i\250\276\021\235E>o\240\211\2753\356\334\275K\232)\275Y\016\240\275_\302d\276\334\367\266=\023\343i<\032\234-<\350\370H<\216Ww=\027\332\004>?\363\337\276\275\247\022>\340\327I\276\016\037g\276\327\360\200=\214CI\276\327J\243=\354\231A\276V^\n>j\345\272>\236\341\212\276\322\037\367=F<=>V$\363\2762\202-\272\232\304\306\276V\266\250<\266\'\024>4RP\273Or\367\275\000\251\002=\034\232\241\276\246\"]=\036\305!\276,\\]>\007\270\313=\353+S=\330\020\242\276\'\t\243<\302\372D=\231jU\276@\341\230\276#$\006>)\007\306\276ixg\276\306\303l\275\353\261\"\276\232\335\030\276\345|\016\276\301\036\360\275,_\344>SL2\276\251\035\257\276P\205\342=\341R\317\275L)\206<\261\242\320\275@\262\304<\010\034\031>\021\024\366=;\370\245\275U\013A\2767\027t>%\264\002\276e}\232=\000\305R>,X\200\276\202M\225;\341\000\266=\322\017\343=\360\243\201\275\260\247w\276\321\346\244=\334h\032>\334\310&>\004\'c\276\014\302d>\336\021\271\276:;\211\275\365\356*=M|\231\275o\215\207\276\225\242\200>\227\350\336>WB.\274\213\2710:\344-4\275\214_:>\2750\261>\267\336\255\275r\335\313\275\237p\340\274I7Y>(\004\204\275\350\242p\275\357\266\211\276P\344h=\275\264:\276c\332\233\275\r\355\014>kx3<*\230\272\275O.\034>\310+\\>m\306\"<P@\315\274]\033\246>j\n\254>\021o\244\275rL >\031\212\236\275@\215b>\303\332*\276\250\276\201<\366\306\301=\371\240\005>\000c\027>\324J\303\276\360j\367\274\351\256\222\276P\244\006>\225|R\275\335\300]>\352\367\301>g\204\002\2756\254\332\273F~\204\276\311\021\321<`/\342>\227~\326=w\323\251\276xIa\275\214WT\276\010\351y=++\261\276\271\253~<\356\304E\275\327\363\n=i\030G\276$(z>f\3618>Q\263\031\275\202\313{=G\211[>\336\244==\241<\022\276C\333\000\276\3473:>\333\233\260\275!g}=\300\340\276\275%m\024=gB\022>\252\215H<\2242\022>\025\237\212>\324u\213>\256\346\'<\365Oe>\370\002\216>xe\274==\310z\275\302\205\333\275\344\216<>\346\017\243>\336\361\251=\276\307\200<x=\024\274*w\211\276\346\245\032>\323\r\000>^\242\351\275\342Ay=\213\340e>t\2422\276+\356\330=\254TQ>\2237A>\031)\\>^5\363>\327\305Z\276}\205>\276\200\376H=Q\211\002=\306\306@>\352O\326\274\323\317\212>\357\375\032>\255\0358<A2\230\275U\000&<\255\243\261>\234&\261<];G>\177\355/=\261?\314=\005p8\276[\253\307\275\371\001\226\276\210\364!\276OH\361<,\333\016>T\002[>\311\254c\276a \027\276\200\266\221=!,\235>\025\233\362\276?^\010\276\031>\252>\243\373\342=c\230\251\276\231e{=\206\326\22290I\307\276\255\177>>-uD>`\2026>Ew\007\273\320O\307>\241\373\317<,\346\323\275!#\301<\275\257D>P\304l=\331\303\201\2737\371\271>8\210\200\276K\374\213\275\277Yp=\353\303\225<6\200\200\276\354I\002\275\031\032\342=\253X\255>\270\005 \276\346`3\275\304\362\363>\263e\272;2E>\276\217E|\276\222>4>\023\242Z\274D\0346\275g\300\376\275\232\014\002?\342h\017\276\025\304\n>A\277\347<r\361\276\274\215\264v=w\226\205>\2611\336\275\365G\372<\364tJ>:\000\235\276\353\236g\276\032\275?\275\025\210\264\276F\374H\275\317\331\274\276\272I\355=K\2169\276J=\362\275b\312\304>\013\245\017>6a\246>\226\2670=\331h\202\274\313\357/>\\\255=;\307\026\315\275\004mt=\375\036\013>\023\n\263\276\273\221 >\021v\342\276\273=\034=4\364]\27628\270\276\255v6\276\0178\224>I\227\272\276\366\224E>KS\307\275\0027\247\276#\256\327\276\201\021K>z\303\021>z\"z>\nk\315\274\305\264\353\276\274\337h>\210{&>Gd4\276\r\333\334\273\376\356\267=>\004\342\275\377\203\236>!]\231\276\211\230\210>\014\266\306<\216\037E\275-\327\265\276\016\020~>\003y\222=\250\314\213=;\247\314\275q+B\276S\354\203\276n_\223\276\367\030\326=\253\320\376\275\227y\247\2748\344\205>\003\337\033\274\323\227\223<\037{\277<\323QU>\267\177}<\316=\301\275r\3419>F\\\324=\372:\321;\333\245\340\276\000\373\246=\311w\220\275+V\\\276\006\353\021\276\207\363\256=\037\334\003\276>D\202>q\306\220>*\224\221\276\330\276\334>\301\327C>\376\246\236=N\021\314\276\215\312\017\276\032\nO;\177\313\241\275\260\362C\275gG(=\220\026e>\002F0>s\030\336=\020V\320\276\271\245B\274\035\272\236\275\327\n#\276\2234w>\201Z\035>\354ei\275$\3353>\274*\226\276\177\224\311:|\361\364\275\002\236s\276\240\263M\276))g\276\001#\233=_k/\276.\340\236\276\366\202\226=\246\362\265\275\261\021\013>g\336\311\276K\031\007\275==\316>YK\\\276\325\216\177>\242\003J\276\'\016\034=~\211\">\311\202G=;\314x\275N\016\271<\235u\001\276\341S\036\276\227\316\025\275\203\374b\276l\256\220\273\362x@\276\224\336U\274\204\223\022=)I\013\276c\212\021>.\3117>\370#+\275\335j\031\276\312|P\276\022\227$>\323\231\031>\245\244\240>-\301\202\276\006\333\306\275\305\210\037\2767/\256\276\"\357\211\276h\235\245>\277\343\310\276\211\202\221>\024Q\242\2768y \275\225I\210>\312Z|=\'zb\276%\316`>\202\333\237\276\303\200i>y\3275\274\031\315\265\275\'BP=\3007\245=~\033\262=\276DS>\321D?>\305|u\276&\024\r?`AJ>ia\312=b\350\242>-\241\214\275\272\223\007<\274<\334\275Ik\002\273N\213#;\232h\203\276\253GJ>a\240\367>\304\374\321\2754\320{>\010\233\305<\006\001\020\276G/_\275\316\244M>j4\240\276\204\016\004?\250;\220\276\276|\t\276\031\212\257=\204\377\243\276\355\223S=\032\005M\275\361\025\246>2\255\242>\307\343\263>/6+\275#\317U\276\245\200:\276\270\214m\276y\307o>\230PR\275{U\265\275\202\247\330=\177pt=\357\032N<m\242 \276\374n\004>\'\310\242=\212Y\310<\276\010\253=\257\276\230>\003\322\257\275\333\352\014\275\377xG\276\325\221\205>H?a>\023)D>\327\2204\276g\210]>#\027!>\221=\224>{y\t\276\247\374\270=Z~\256>IQF>\313\032\376\275\372l\232\275\255\024\241>r\036\357>\335\251\253\276\256\210\270=}@\253\276\271\314\343>S\234\273\275\352\343\234=\031\377\271=\343F <\314\274\205>U\024f=\270qs=M\033\223=ny\253\274)\356b\276\225A\r\276\003\243\215\276\037\224V\275\370\022\210\276P\255\206\275h\231w>\250\237\275>.\021\001\276\270\005C>\014\200c>\177\326\363\275\261\356\t\275\354\322\213\276Z\205V<\303\200\205\276\220\022J=\374\366Y>\3437\036\276m\027\232>\203\216\300<\037%\325=\3310\221=G\313\204=\230\363\027\276Cj\003\276\356\013\260\275\326\354\326\275\341Y\221>L\010\027\276n\345\343\274\336\362y\275\222&!<&eA>\322\224*>\226+P\276\341\020;<\364\031\305\275la\n=N\3577\276\246h\215>l^\223=\271\007\265\275\213\317\325=\266\334\255=\002\365\235\276s8\025=\024,\207\275l2\305=f M>^\331o<\304cC>\334*\251=\310{\207\275\305\n\261\274\325\375\302:\3444~>\033\003\202\275\\\366x\276\367\235\243=\034\353%\275\230\331\000>\330\316\006\276\225\370\375=\360\022}\275\254\252\366=\334\332\310\276\017?\027>\275\004$=&H\341=%C)\275!x\260=(\211\001>\337\270\030=\351\373\304>\002\017D>\013\350\035\276\215b\021\275\026\247\024\275\016\251\202>\020\221\200\276\035\304^=\233\277\261\275\351\034\340=\037\036\372\275\316\366\001\275\273\226\355=P\237}\275\003-\343;Y\254\020>\265\254\">\223\313\206=\326\207\372=\243\373%\276C7\365\274\211\243.\276\006\237\330\276\312\030\275\275\235i\005;\0005\315\275\256^\256\273Y7\276:X-\335\275\3678!=\346\206\036>S\321\013>\003\255\335\274.\352\004>\247\364\377\275\316\265\346>*t\240<x^\357\275#\333j>2\232a>\026\201\233>\272\2228>\227\272\246>Y\033I\276m\351\356\274\362\"\021>\3761`>\303\275\330=H\242B\276C0\313\274\314:f\276\032l\322<\275\033\244\276\336\010\246>C\007s\276\320\007\235>o\336\246=\031\352\337\274\343\360\306\276\2055\024>\335\365\026>\224O\033\2765\232\253>\312[\035>\367\331\273=,R\207>\230\316\023;\344r\306\275\245@I\276\376\246J>u+\302\274cg\314=\240\327\225\275\212s\t\276]\330\204\276g\356$\276\3773\260\275\020-,=nL\312>\002\275\356=\346}\265>\031\227\367<*\033G=\t,\236\275\304\036\313\276\377\367\321\275\212[\026>&\350o>\314\377\006>C\243\006=BVe=tFz>\352S\326\275\220\252\230\276\347\254\034<\332\231K\276\344\377\332>\206R5\275w\317O>\206\300Y\276\245\330\314=\266\310<=9\014\026\276n\267\253;\324Ld=\020\036\267>\375\246&\275{\303\201\275\336\021\205>\345\0016\276i\363\254<+\"\335\275\306X\204\275\261\022\273\275\201E&\2760\216\304=6A~\276\002\373q=fXw\276ecc\275d\336\307\275s\353\020>\355<\214>\362\034[>\031\010\027\276\027\305\216\274V\324\n\276\007\255\200\276\361EO>[\225\300<\2452w>\266\204*>]\355\323=-jW\276>\263\004\274\\\021\325\276r\225\206\2758\256\t\276\340\206\004>A\266\311=\0366\260>\367\371\022>\232Z)=\035\t\250=\265D\365\276\321\335\267\276\360D\220\276)\346\214=\267\007\272>\275\330c>\016\022\330<9\321\031=(\332\333=\373\357w\275\262\343\177\274@V\020<\267\316\010\276\205N\225>f\221\306\274\230\255\316\276Z\251W>\346\351\022>c\272\360\275E\242@\276\274\221o>\020f\327\275\315\\\203>\242R\267\276\027\230f\275\212G\252=\002\252\216\276\017\230b\276[\224\273>\323\001+=~[}<{hf\276\356\246\222\275Nn\026\275\217\225\264\276\310\251\016>\366\021\000>\003j \275\234\201Z\275\201\206\233>\266/\367=\024x\200\275\037\356A>i\221w<\014*\020\275\201\314>\276\000\310\340\275Z\265l>\320\023F>\341\344\207\275\017\213\352<\350\035w\276E~\007>%\202\202\275\331\275\262\276\013\003\200=?y=\275i%\240\275\225\211\272>\375W\215\276\276!Z=\217\314 >\337\212\263=kU\305\276\007Lh=\374\344k\276L-Y<\261\376\221\275\0009\034\276m\0007\276\'v\222=\003\031\222=g\321a>6\007\017\276\310O\220\275\304ht=\313\037\251=\304\331\010>\224\021\370\275\360N\237>tJ\306\275\276K\254=gO6>\3010\026\275\"6\036\276\327)\226\275\371*\257\274\003\237@>\372>\226\275D\273\252\276#TI>Ga\033\276\377\246\342\275\016\222\330>e\256\265\276<ZN\276w\341\316\275\271L\t\276\304o\010\273qd\300\275"
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\026\001\022\276\257\013:\275o&\024>\204\271\016<\014\365\226=\352\344q\275\2704\203\275O:\210=e8\203\275\241\214\220=\004\214\323=\313:\212=U\327\346\271I\016/<\303\215\235=\353\201\034>\373\363\344=op\276\274\314s3>\177\010\332=\300\354\232<\276i$>\224`E<\037\363\246\275\211\346\374=}4\354=:\034\211\273\242Q\t\275\350d\264\272\250XF>\270\252\304=\253\033\247=H\215\205=\0235\225=\234>\244<t\363\212=\313\234\242\273+\205\033>\3174d\275\206o\317=\311\266\271\275yQf=\020\346\210\275\025O<>SF\261=\336\313J>y\001\241<\312X\002=h|\020>cc\277<"
      }
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "Identity"
  input: "dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "batch_normalization/batchnorm/add_1"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Relu"
  op: "Relu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\004Zk?d\321l?\361\211a?\005f\205?\000\260m?X\tt?\022km?\3310\177?\0329t?\202#f?!F_?4 s?\322Nu?\365L_?\007\266k?\335\n\201?\266_Y?\226\373X?\214LP?\211\277d?0\300[?\365\204R?>\022\211?\323\266u?,\351Z?\372\255k?\"\323o?\232Zh?7#s?\n\376l?\300?|?=\317]?\275\rX?Q3g?S)o?.\021p?\334\016w?\302qY?\225Wq?\271\034`?k\244\200?\300.p?\324(Z?\370;_?=\327y?\277\240Y?\352Q{?\241\320w?Z\372_?\024+d?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\220\311\201\272e\267X\273Ly\364\272\246\223+;\301LB\273\310\034\017;p@\001;\204\001-;\005\313G;\350\243\002;\254X\353:\272\263+;\315\220\322:wN\020;\350S\005\273J+\026;{}\016\273\235@\017;^\005\014\273\307iM\273\277I\342\272\033\330\367\272{\253O;I \3529\366\315\335\272\030\010\031;\277\202\2349p\030\023;\325\244\264\272l\\\013\273\n\335T\273s\301\333\272E\037\372:K\r\010\273B\201\033;\002\234\270\271\305^\364:}\303\376:c9\245\272b*\360\272\305\007\200;\200\357\022;4n\n\273\"\362\275\272DA\362:A\212\344\272\252 8\273>;\';\341_\355\272\2224\014\273"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\005\264\034?\265\233\020?\276\026\032?~J\345>x: ?\023\017\020?@\222\014?\336\0212?1\340\r?\035\224g?\355mE?F\352\'?\307s5?o\362B?\233<>?\315\215g?\030\362\202?\177r2?\"\347\201?v\311v?\201\210D?\312\362\177?FN\332>\216\205M?\274\271\205?\346\260\001?H\344\001?A\376\026?\367T\023?n\035\207?/}\336>\330\217\036?+\3465?H\3043?\221\366\036?\210\310\357>Ccg?>G\233?lP\007?n{r?\372E\003?\363j1?\264\332\017?\347\207i?\362\273x?\253K\213?\310\250W?\200\374\"?\271O&?\373>\020?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "tC\212?w|R?o3\"?\323\304%?V\216\250?\304\204\231?\363\245\236?\\\264[?3\021\324?\235\351\264?\026\272\303?\021Pv?d\277P?\205\024 @\013\243\254?\356\223\234?\362\350\345?\374\315\372?\2079\305?\302\245\271?\222\001\331?]~\275?\214\3430?\300\304\241?,\035\351?vH3?R\0234?bDk?\210\357*?\355X\n@\"I\025?c\002\036?T\315\\? \227S?2\277\033?t\257\004?\247m\177?O|\350?\3319Z?\326\346V@6\364\'?T\010\210?\245\306\242?A\345\204?J+\355?\346Q\306?\036!h?\031\031\220?\213&(?\335#\216?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add"
  op: "AddV2"
  input: "batch_normalization_1/batchnorm/ReadVariableOp"
  input: "batch_normalization_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_1/batchnorm/Rsqrt"
  input: "batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_1"
  op: "Mul"
  input: "dense_1/Relu"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_1/batchnorm/ReadVariableOp_1"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "batch_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_1/batchnorm/ReadVariableOp_2"
  input: "batch_normalization_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add_1"
  op: "AddV2"
  input: "batch_normalization_1/batchnorm/mul_1"
  input: "batch_normalization_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\0074\232\275Eh\017\275\003<\r\275)$k=\027!\233\274\215\325\250=\035\214\240=\2128\247=tM\016>J\232\305=\to\027>\207\'\232=\3008\266=\266\355\216>\373wg\275\030\030%=\350\202<\276\242!\217>S\221v\276\3753\202\275Cz\r\276%t$\276\327(v=\017\276\242<!\300\277\275\031zk=\231\202\376;\305\234\346=\343t\203\274\360\253#\276\023F\354\274\360\037\265\274\316\275=>\254\331\242\275\314A\026=\257k;\275\017{\231=\351IH>\217\356\021\275&C\221\276#\252\031=\376\326\275=\261\264(\276\235\274\266\275%\205\230=\237K]\276\305>\352\274\020\\%=Y\323\244\275\244a\257\275"
      }
    }
  }
}
node {
  name: "MYOUTPUT/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.002172895008698106
      }
    }
  }
}
node {
  name: "MYOUTPUT/MatMul/ReadVariableOp"
  op: "Identity"
  input: "MYOUTPUT/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/MatMul"
  op: "MatMul"
  input: "batch_normalization_1/batchnorm/add_1"
  input: "MYOUTPUT/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "MYOUTPUT/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "MYOUTPUT/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/BiasAdd"
  op: "BiasAdd"
  input: "MYOUTPUT/MatMul"
  input: "MYOUTPUT/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MYOUTPUT/Sigmoid"
  op: "Sigmoid"
  input: "MYOUTPUT/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
versions {
}
