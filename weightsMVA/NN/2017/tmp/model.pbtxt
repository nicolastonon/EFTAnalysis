node {
  name: "MYINPUT"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 11
        }
      }
    }
  }
}
node {
  name: "Feature_normalization/Cast"
  op: "Cast"
  input: "MYINPUT"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Feature_normalization/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 11
          }
        }
        tensor_content: "\000\000\000\000\250\332U@\000\000\000@\014\335K?\000\000\000`m\'\373?\000\000\000`C\247\000@\000\000\000\200+\214\007@\000\000\000\340\355Q\203?\000\000\000@h\310[@\000\000\000\340\035\302\372?\000\000\000\340\300~\361?\000\000\000`\352]P@p\034\307q\034\307\341?"
      }
    }
  }
}
node {
  name: "Feature_normalization/sub"
  op: "Sub"
  input: "Feature_normalization/Cast"
  input: "Feature_normalization/sub/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "Feature_normalization/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 11
          }
        }
        tensor_content: "\000\000\000\000\020\270v@83o\"\363\221\005@\000\000\000\240:#\371?pff&:\325\370?8333\320/\001@\322\314\354\336\352{\007@\236\231\231IGut@|ff6\204\303\013@\000\000\000\340\314\002\376?\000\000\000`\242\nU@\216\3438\216\3438\026@"
      }
    }
  }
}
node {
  name: "Feature_normalization/truediv"
  op: "RealDiv"
  input: "Feature_normalization/sub"
  input: "Feature_normalization/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
}
node {
  name: "dense/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 11
          }
          dim {
            size: 50
          }
        }
        tensor_content: "\r\211\002?v\021\n?\373\264\212>\221\355\010\276\272\037u\274\022B\006?e\251L?\356\342&\277\271\223\243\276\232:\000\277O\023\255\276F2\262\2755\273N>\261\264\203\276y\026R\276\351y\212>9\2541\276aH*\276R\373\334;yW\321>Tk\225?oI\370\276<q7\276\207\234\250\276\346!D\277|\320\203;\305kQ=\320\274\237\275%\244 \275\337\272\014?\255h\177>b\226C\277t\335\n?S\377\313\276Q\300\236>\364\226\302>\257\032\242<\301\246\007?\330\227[\277\016\\\351\276\322\177H\277T\307\216?\024\273\256\274\233\250\371\276\026/F?\254\311\312\2760y\200>e\254\262>f\2423\277\032\331\323\276\334\034j?l\037\300>\320xT?\211d\253\276\225\330&?q42=\036\216\364=G\024\311>:n\245>\'\355\321\276\023\266\003\276\325\264h\276\254\013\233>\313\346\n\276\330\353]\276\246:\252\276Z\361h?\024P\315=\234\231-?W\025H\276\033\210\263\2766\022a\276\230_4\277\233\n\223=$\250\254=|~\313\276uW<=\343\277\314>\347\000\026\276\342 \027\277i\010\251<\216&\324\274\352\253\r>\251\233\303>\222u\237\276FB\246=\326\014\t?\345\354#\276\227\360\025\276\237\n\327>8@n?\245\233:>(\207\356>\3672\216\275w\366N\277=|\314\274\035\272\036\277%\256\306>\230\327\370>~\212\004?\220\3225\277\345\262F<\365\276\266\276\242\241j\276\350\222Z>J\343\315\276A%=\277\004h\022\276\006\216\314\276\003\234\244>\344p\\?\302\326\276>\245p\207\276\177\021~>\216\001\022>\330=\350<R\216:\277;\004\267>\256\305\t?\033V^\277\002\314\031\276\022=\334>_\313\201\276\014F\202?\250\016%>\224\356\222<du\026\277\374\366\243\276\302\237\'\276D\3042?\262\315)?\356\351\363\276\225\250+\276\236\263\"?\363\360\021\2770j\331\276G|\031\277\203\241\200\276}\244L\277\330\207\200?$;0\277Y\243\032\277=\205\024\277\002X\210>\210I\025\277\327\374\253>\365\241(\276\223\370/>s\365c\277\276\035]>\350\364\265\275A\373\027\277;\207\r?\254\017\247=\373s\214\276M\020\">+\2101\277a\377\310\276/\244\264\276\356\252/\276\331Z\032\277\005\354X\277\305(\372\275\025%r=\037^x\275,g\017\277\270\343t>\345`\r\276\003\347\270\276\362q<\277\260t~\275\250\321\217>\024\265\032\276\314\304\r?\271>\'\277P\025\036>\236|I>\3424\274>1\333G\276\031h\264\275\264I(?\351O\261\276}\377A>\216x\355>\341R\317\276\264\274\322>\220\324\303>\360\222*\276j\332v?\037\007_>.\\\035?y\366\025<{\312\304>U\327\004\2751F\323\276k\272r\274\322\323\304>\374\'K>\t\262\260>_\205\301\2751\272o\274\013\353\354>\316v\252\276{\213\262>\211Tg>\347|\367;f\177A\276\027\311\310\274\033*\252\276e\317`\275\217F\266\276\365\305)\274qe\253>\025\211G?s-.\276>\307\006=\215b\027\275\241\3526?Ys\340\276Z\222Z?\217\003R>\346\225\254\276\365V\005\277r\\L>I!$\277\rI\211=\030\027\362>>\353p\276{;\356=\001\206\200\276\026\223\231=\310\0346\277*t\205\276\341\005=>\364%\372\276rt2>*\212\261=A|\r\277\235\363,?\274\234\301=\222\004\320>\312\231\305\275=\'\202>aT,?\007\004\336>\\BG\276#\n(\277\240\346\025?\034\006\264=\375\375$\276\251 \354>\374\222#\275\264\255\243>5\334\340\276\236\244j?\357=\024\276-\247\215=\345\222\333=\232\206#=\225(!\277#v\005>v6!\277\267\004\326>\026W\366>\'\243?\277v\032\245>e\025\340=1N6\277\225\363\301\275\272\037\342\276rv\220\276~?}>wE\352\275\207g/\276\216\014\270>,<\353\275\212\\0>\246C\356>$F\302=\246}\364\275\025\2639\274l\224\252>\267=;\275\265\354\031?\3710\007\277\301L\'>\235b8>\301\331\200\276\0314\222>\226\267\001?ES\271=7\307\n?\373\034\002?\231M\372>\177V\224>\026z\302\274\314\264\177?\213\022\354<\014>\t?D<@>>\021\262\276d\266\027?^\3050>:\345;?\221\327f>#jg>\035\272\\?\230L\266\274\334\247\314\276\226\013\354>\221\320\037\277\370\331\r>\241\004\205<\307\246 >T^]>{\320\214\275pb\321\275\205+\027\275\232c\245\276)c\240\276\336\334H\277\346\221\030\277\243\216\t\277\213\323\275<\317\361\270\276\"\024!>\302\334\221\2760\3352\275\024\266M\277\023Z\231>\021\277c<\376\245\201>\243\305m\275\303\331A\276l\002 ?\017t\376>OP\371>o\001V\276\252l\026=\310\276\232\275\334(\260\276\273\363\332>m\020\217>\177\360\310\276^\254\230<\235\000\200\277\326c\365\276m\230\240=k\004\214\276\205;\336>\321\231X?\203i\004>\373\362|>J_,\277mw\032?+e\251>\355\233\317>oC \276>\333\330\275]\3214?;\027\224>\213B\223>bDJ\276t\177\243>P\rP\276\330\364\224>\237\036E\277Ot\245>H\257\013>w:8?y\330l\276\330Q\371\276pD\366\276)D(?\217\331\375>L\345:\277+t)>\347\245b=bv\260\275\301uG?\303\021S>\245\014\261=\364\263\267=\024\243%\277\'\232\200\276\232\350%\276?\t`\276{\356\032\277x\267\316=\243\232\014>\3201V?\373L`=\330\237x=\207D$?K\261\244\276\033O\234\276\356dR\277\306\014Z\277\317\000\241\276\030\324\216=T\333\003?T4\204>0e\000=#\036\200>}C\024>\374\250X\276\225\323T\276\216\361\216\276+](>m\243*\275\034yD\277q6\001?=\323\225>\310\302\312\272!w\026?%\306\236\276\254\241\353\2761\272U>\216\335<>\277a6\277\302\352\017\277\327\301A>p\252o\276Zl\245>{\223\206\276\235\226\336>\253\'\367\276\005\340j?\201\366\231=\035=\035\273\315\373\272>X2\257\276=V\003=U\317\246>\211\345\r\276\237\314=\277\362J\245\274\031\363A?t\327;>\033E\240\275\000\256%\277\313\240B?\312\301\006>\230,\233>\353uP>\210R\314>x\2212?\275q\341\276\312\215,\276_G\354>\307\206\014\277\351[\245\276`\312\273\276s \007>\363Mz\276\315\357\n\277V,\217>\312\036\274>\254\336??\337\014\227\274\276\232\237=\355\351\023\276cBQ?\256\367\000?^+\n\277\327\355}\276\355\260\322>\250\031}\2755\327N?\356\353\375=Qp(?:\tm?M\247#\276\261\001\222\275\355\3471>\213\313=?l\311\343\276\004/\322>\002KB\277\350\224\215\276\326[a>\367i3?-\020\216\276\304}\307\275i i>:\312\n=\026\206\t\277\2011q\277a.\027?\333F\313\276\233|\250\276\304\325\367\276\217\373\n?\006\r+\276e\001e>\335\273\007?\321\333\246\276O\001*\277\001|\305>e\000\226>\235M\032\276\036\315\016>hO\344\276Z\356\003\2766\370\031>\001\031J\274~P\020?)\216\320=D\231\215>`W9?+\263\371>\321\307J\277:\247 >_\034n\275S\320g\276\'\2673>\202s.?B\223\001\277c\302\017\274\272\241(\276x\316\275=\320\205\204\276\322\331\222\276\023\2077\277\021\r\033>`a\245>\034\357-\277\3641\222>\036\211\320=\"\347\037\277\2648I\276\016\323\243>\220_g\277\340\216\364=K\370\376>\r\356\237<?\366l=MkN=\212%\035=/\241D>V\025\013?^\320\315>\317(M\275\307\310\277\274L\355c\276\320\217\331=\204\300]\277\372\254x\276/\350\203\275\312\301U\274"
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\005\311\231\273\\\0248\275\331\000m\274\254\247\203\275\275\316\002<gd\314\275\3327:\276\3171\230;\227\313)\274O\363}<8i\342<\233\365\307\273$\026\026\275m\346\257\272\241\2668=\325\242\376\274\010I\003\274\372\216\000\275\330\213\252\2757a\035\275\025\0077<#+\t\275*\230\033=\322\214v\275\324\367\227<\317\020\363\275\312\371L\275\t\003S=\260\367c\274W\372b\275\243\315b=|\212\217\274E=Q\276\240\267\230\274_\251>=\373\002\277\275\241D!=\247~Y\275\035\225\037=\342Oj=\314\252\246\275\216\013W\276\t\201Z\275W\021p<PE\255\275\362N\223=\013\325r\273\217\263\256=%\210\207\274x\247R\275"
      }
    }
  }
}
node {
  name: "dense/Cast"
  op: "Cast"
  input: "Feature_normalization/truediv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "dense/Cast"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense/Relu"
  op: "Relu"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "gnt?\273$c?\347k\200?\342^m?\237\250\204?C<\217?X/\204?\313Wf?\232\272o?\310\025q?N\tg?\337\254\207?\201S\203?\301\022m?\t,\206?\315\235a?\201\311\203?\374\217y?K\373{?\337\346\201?\'\334\210?\017\010x?\t\324k?\0272n?{:{?\253\362\201?\200\305\210?9\305t?\342qs?f\273\215?\2145s?\206\320q?\246~{?\005a\200?\005L\200?(\351\221?\303I\202?\017yj?\267Qy?6\\\200?\212\033\206?p\236\216?\221\247\205?\217\227\211?\307\354z?5\020l?s\217}?!\342\201?!B\216?\2277|?"
      }
    }
  }
}
node {
  name: "batch_normalization/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\030`\265<3\265\033\276\010\303s\275\216v\203\274\325}\370\275\233\344\332=\334\036\005\276\227\204\236\2756J\325\275\"\274\254\275~\354\215\275=\226{<#\025_\276&\0232=R`\231=\204\375\312\274\344kt>\004\271\245\275\342\207\225=\263\2438\276d\222\214= /\004>\313\302\263\275\036\005$\276\330f3\276\343\230#\276~\033\031\276\002\005\375=$[\360\272\252\337\275\274\032\270Q\2752\370\361;\035\311\200=ymu;\253\031\233=\225P\005=\206\312\317\275L\206\001\2762\243G=Sv@\274lE#<\025XM\275\037\023\315=\214\341)\276|\373\337=/\301%=#\334`\275m\300\331\275:\003\004=t\313\005\274"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "9\347\325>\210\347\215>;\004\254>\242\242I>=\034\245>\022\233J>[\204\327>q|\366=\010\324+>;\213\214>\\&\204>\305\364\274>|\301]>\271\373Z>Dw\212>_:=>\271H}>\361\312\211>\363\204v>\346\034\310>C\200]>$y\214>\317!W>\302\026\321>)\010b>i\247)>A\302b>L\036\234>\374N\343=j`\263>\313\250\244>\367\236`>6)y>\002.\214>\371\023\300>j\332:>\231v\211>ofu>\213Y\232>\214B\242>\220\310h>\262h\250>\225Xo>{\312}>\342\027\260>\003vp>\341s\340>Q\265|>0mB>\330\235%>"
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\313\331\310>\333n\200>\254u\207>\326\330\336=\tj\212>8~\026>\027\220;?\022\354s=\266\257\361=\320\367n>\306U^>B\325\242>\222\335(>b\277<>f\273D>\270.\317=hM^>\007F\203>\273\370]>\234\246\354>\252+>>Nz~>\320M\013>\227\032\336>#\304!>\"\336\005>\321.\034>\245\230\202>>\277:=\260\330\226>\024\001e>j\270:>\032\370+>>w\203>C\250\311>\034`\024>6\3401>\316\300!>\247\260\227>\341$\224>\261\266c>f\365\317>\343\210#>{pq>!1\257>sB\017>\000\325\376>\313\027*>\217K\007>\262Z\264="
      }
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add"
  op: "AddV2"
  input: "batch_normalization/batchnorm/ReadVariableOp"
  input: "batch_normalization/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization/batchnorm/Rsqrt"
  input: "batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul_1"
  op: "Mul"
  input: "dense/Relu"
  input: "batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization/batchnorm/ReadVariableOp_1"
  input: "batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization/batchnorm/ReadVariableOp_2"
  input: "batch_normalization/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization/batchnorm/add_1"
  op: "AddV2"
  input: "batch_normalization/batchnorm/mul_1"
  input: "batch_normalization/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 50
          }
        }
        tensor_content: "\334\303a>\207\276\241<y\033\353\275\246\024\331\274t\362B\275\366\377T\276\007\247F>\245\336\237>\235\257\260>\200\213\313\275\3059\235\275<\020O\275B\002\233<P\212g>\t5\302>^\234\025>\006\340\215=y^\215\275\2023\357=\323\253\341<H\006\225\276\270o\005\276\354\302\314\275\\,\006>\312\255\230=\234_=>\201\244Q=?\202<>\242\351Z>\356\206\313\276X5\207>!\323A;\202\367\263>\371\002\254\276h\"\347=\3437\240=\266\002\030\276\304f\200\276\344\251\371\276\237\277\025\276\356V^\276\036\235\034\275\020_\023;\222\234\224\276n\222\253=\020\000Z>\013Qv\275&\372A\276\236\224\214\276\256\260Q\276)v\224\276\230g\217\276\335S\023\276\267\025\212\275qd\220\275@g\274\274\313\313\037\276><\210>)O\304<\242\310\255\276&\3405\276\202\203m\275\027\374j<\320\302<=\252;\266\276\374\345\336=q\3312\276Uz\364=\252\200\262=\331\207%\276\374&\026\276\324\306\020\276T\203\204>\203\231\255\275\001\255V\276\3278\020>\220N\204>Vz\203\276\312\356l=W^:=v\201(>\030\312\037\275\367\337\323\275\312\345\230\276{q\334=1z\r>\356\302\005\276>\014Q=\033{\236\276\336\310\026>\01379>\007.\037>;\223<\276=\033/>\365\361\013>\313\233\203\276\037\2718\274\'\336\210=\035`\016>?\326\233\275\315\351\251\275\225\362\201>\232l\002\276\267\345\335=\2135\331;\362\212u\275&E\000\2767\226\021>\027\376\227>\205A,\276\023\034\341>7\362\005>d\346t\276\006\304\214\276c\242\322=\222\235W>U\023\326=|\203`\276\214\2113\276\227\252/>\000J\304>~\250\244<{\3473>#\276B>X\337*\276\360\231\n\276\2500\342<\346\200{>\274c\276>\315\215\213\276\345\022G>lU\030\276X\367\306\276\257\352\221\276\246\317\321\275\364aK\276I\034\340\275\314\221q\276k\222S>\335QA\275\233\354\351\275\"\027\263\276)\002\033\276\342$\325>\265\321\016\276\261\234a\276\034h\341\275.\263\300\275\313\2348\276\243\246\361\276\031{\'<\262\242j>\037J\373>\266\321Z\272\373\226\214\276\010\240\232=7\214\016\275\022\000\243>\302\303W\276\016UI\276[U\035\276\333\351d=\334\261S\276\t2\224\276l\371\324\275v\377 >\010\243\024\274\223&\253\276\370\267\"\275r\013\211=a=\322=\376Yi>\3319\224>\007D=\275\241oI>\312\200r>\356o\023\274\2005\323<\272\210\227:\'\237\017\276\255\252\r\276\3455\r\276\267\002\213>U\277\320\275j4\\\275/S\221\274\350\334/<\035\320@\276\274\210\201>0\3144\276~\006D\276h\373\375<\253\311J=\037ZA>\213\361|\276\256-\004=d7\317\275\371\304t\276G\365\246\276&\322\n>\254\376\224\275\000\t\373\276Q\271\021\276\032\337\357=]\025!>\261.\004>#0C>iM\206>\224\235\371=\222\365\211>o\320\354=\2111\254\276XC\277>\367\314\205\275\2066\230>t\227\'\2765d7\2761D\332\275\217\370?\276\300\\0\274H]D\275.H\257\275\177>(\276\034\177$\276]\301b>!qq=!\235\014\276*\375\215\276/\277\270\276&\235\322\275<\206\246\276\265\313\215\276\203\346i>v\200\374\276\032f\233\274*\365\230\275\231U\302=\246\325F\276\212\327C>U\213\n\276\325hl=C\244D\2760~\023<\240\037\255\276\'\235$\276\341\"^>\001\343\340=\235\004\">_p\001\276\360\330\345\276c){=\021\300\356=\3127\233>\356\361f\276>\177R\2765N\207\275\031\276\304=\226\301)>\307%\351=Gg\002>C\322\216\276g}\323=A@\263=-\264(>W\235\372>\036p\215>\017i3=\261\3406=\224\366\327>\314z\205>Y\276\203>\234\232\335\273\347\007\207>,\204n>\320-->\000I\266>\256\013\000\276g\331\243>\026\305\210\276\271QX\276\331\243\036\275J\361[\275\3340y\276z=\316=Kk\271=\375\020\t>\352\257\234\276\313/\307\276\014y\244>\330w\303>\260V\233>\274;\246>[\245m\276A\257\324>A\336\200<\206\261\254\274\027\2747>xXK\276W\221\227>\"pY\2754\310\337\275\257\366\247\274~\021\334=\027B&>I\223\264>\014e\356\275\272\n?\2765\345\303=\\?\004\276\315`\311>\037\273\217\276f\210R\274\371\371\223\276\356\002#\275\355\267J\276\246<\241<\305I\343\276\247\270*>\027\344\266=\312!\360\275\243U\014\275:\216\231>=\347\347:l\005\246\275\302M~\276\023HZ\275{\255\027>\336\343\275\275\321\337\234=\376\206M=i\314V\275\227 \036\276\262&e;\370\017!\275\300T\020>1\377\001=\353P2\276\343\2340\276Aw\3579!E\313>\017S\232=\325T\036=\014\322\216\276\354\025\315\276~\340\244>\356\037T\275?wC>\"+3\276JU\n\275\374\377\321=\177\247\361\275(\246X>h\262\307\276oW\275>.\033\000>\031\004L=\300Bb>\013P\t<O\237\263=\333\017\234\2755\256B\276cc\317\2756\035\270>\002\000\237=\311d\037>\005\0361=\200c+\276Z\316]\276\244\213\253<\370ck=R\220\240>\245_\177>\237\314\237\275\276#\254\276\245_H=\221q\243=\013M(\276\265\354\n<\034O\371=\356\220U\275\213\326\017>^o\211=J%\314=\211m\004\274\317\223U>\253\241\250>\234.\252\276\007S\223\275!\207Q\2769\214\214\275D\273G>\205\037\274\275%?\355=3\250Y\276\351\361C\276\323\346\371\275\014\3319>\314>Y=VJ\270>\037\'n>5},\276:\016\362\2761\006z\274\266\300,\2762\211_\275\257\331\237=\253\201t\276\003\360\302>N\326\301\275\372Uv=b:\346>\242\263;>\234\212R>o\nQ\273\266\206\363\273\301)\320>\021\2616\274P\032\214\276\316\246e\273\325z\341=V\006\247\276X\350\221>!\373\222\275 \213\305>d\215\311=\370\276L<mBm>\2746l\276\027[,\276\320\204\235>b\324t=\271\004$=\264*\355=\264A\314>2\356\035\276\341r\024\274%\317\274<\371\036\326\274H\316\375\274\222\374\253\276\374\010\203=~\203\202\276\003K/\276GNA\274\200\025U\276\251\325\375<!\317\371=o!\274\276\374\257\336\272\305qb\275K\323\325>\211l\230=\301\254\224>\316\307\247\276\321\030\267>\236\2355\276[L\030<n=\314\275t\220\257=T\305\242>\376\305\226\276*Y\230\275;\230O\275a>\037\276\276[\236=\014B\352<+\265\216\275E+Z>= \034\276\262t5=%\177x>jCZ\276j,\r>V\360\207\276\260\325\201>Eah\276\313\352\215\275u\270\375\275\314\351\304=\363\363\375\274`\t\306\275\272\304\310\2768\200\206>\253\232\013\276\342\331\317=\226C\200;\205x\256>\223\237v=,\242\343=\246=\223\276\366\205}\275\361\352\230\276\261.\017>K\266\214\276\251~\230\276\002\272F>\326e\026=V\317->\327\224\301\276\227\200L=\000L\r=\205\210\317>\347\246X\276\235\250T>\253\3574\275dg\305\276\267v\016>aO\203\275\234:&\276I\327W>\242Cn>\316,9\276I\340\375\275\250\300\017\276;\226\347<\253\267\005\276\245\241x\276)\201\222>%8_>\303XG\276d\204\323\275!a\301\275\346\241I>7%\357=\257\367\304>J\375g\276\231\342\240:\021\263\014\274}\254=\276\212\n\003\276\014l*\274{v\202\276W\020k\276N\202\244\276}\324\230\275,j\240=\231z3>\207\265d\276\024_\257=\217\326\313>\373\016m\275\021\237\025>q\2502\276\247vV>9\3136>6\222\032>\230\226U=\265\242D\276B0+\276\324+p\275\314\244\206\276\235S\025\275a\020\031=\347*l\2763\334\024>d\362\201>B\352\324=\334\363\273\276\203\321\331=\037V\373\275\3726D\276\376\016.>A\244\276\276g\330\213\275D\004\330\275\366Aq=6\"0\276\245\266\361=\220H\177\276\252\221\244=\235\245\307>\365\347\260=!\212w\275\204+\225\275\2644\310\276\363\327\251\276\037\342,\276;\243\234\276\255_\026\275q\3212\276\362\002\240\275\352\025\265>\262\275\236>\237\346\366=\000~\306>-\353^=q\n\010\276\311s\257<\320\006M\276\201\203L\275Q\301\302\274\0004L>\341\353)>\210|\210>\253\206\331\276\331\203\336\275\321\336\360\275\323\202\232>\250\024\260\275\256S\256=\036\177\030\275\004\210t\276G\326#\275\013\037 \276\036^B\275x\352\207=\247\222H\276\241;k\276\032\316\013\276\205\t\255\276\332H\351=d3\214>]\272S=\323\253%\275\275G\255\276\034_\025>u\177\n=[\340\211>\305P\034\276\366;a\2768c<\276\302\333h\275!IW=\346\356\210\276j\367|=?_\217>@\316\265\276j\341\023\274\351\304\004\276*7n<\364\321\215\276\306\231\265\276uP\'\276\212\010\376=\260\020\274\276|j\217=l\300\351=(\235\007\277\255\'a=\004\003\350=\273\354\334>K\252\367=I \205\275\327e\034\276w\315\021\276\211eZ>6\362\364\2748G\n\276TkZ<\231h\261\276)A\022\275*UL\276+\241P>x\273\247>\236\031\205\2756B\207>(\023\210=L\037\221\275\315}q=\204\273j\275Wx\214<u\255\261>\373\323^>\320S\036\275\233\033A>\014\254\300\275\354\324\200>y\217\027=k\220#\276$\367\321<[\226\n\276#\202\260>\275F`\276\254{\261>\006z\343=\202\006\020\276\211\007T\275.\017\246\276~\225\303\276\210js\276zT{>\243\202D>\256\270\320=F\311\225\274\202,\t\275\017\360\274\275b\243(\275T\216\337=\270\263\025\276\344hM\275\353\212\016>,\2051\275\256(\326\276\302\275\023\276\t\3409\276\000\024\233>\241i\n>\305\005\200\276|_\026>\231\275\327\275\rv\304\275\377\205\210\273}}\023\276\311m\330=\252HV>\330a\224\276\231\\\267>}{\264<\336Un\275$\267\342\274x\036\r\276|\000\222\276\371T\324=\037\305\250\276\326/\227\276\320>\333\276\n\276\257>\260\002\341=\340\262\212>}\006r\276)\014\270>!\354\037\276sy\317\275\243x\210>c=\026>\357\366\332\276\021?\020=E\022\217;s\376\276>\261Kf=\306@\252\275Gb\243>\210\266\327\276\024\227\023\275\017\220\215=./\254\274\301\002L=\302\332\231\275\332,O\274V\365\222\276\3114\230\276\341\004\225\275\246\202\304>\366\255\002=\334m\027=\271\022W<\007f\242=E\023\306\274zs<>h;\246=|\350\311\2760\361\211\275\213\266\256\276\355\373\254>\211\263\345>R\022g\276g\326D\276\347\010k\276/\2730\276\253Z\031\276\317\243\317=\030\265\031\275\010F\212\276\263\005A>\330\310\261\275\033\351\007>l\363\251\276\253>\'\276m\366o\275:-S\275\346\375\234<\343\215\240>\"\014\035\275\370\037\252=\360\277\013\2763\256\210>K\306\353=e\327\247>@\344\212\276l\243%\275\366\337\237>\261|<>\355\0262=\370dV\276&\")\276\203\025\362\275\345\346\016\276\221\272\242=\003\230@<8\265>\276\335\250\302\274\032Qm\276\315(\245=\277F\344=\222\237\207\275q\347\210\275\006\366\013>\250+\204>\263.\242>iZ\215=@,\030>\2543\232=\337\267\221=\364\212W\275\276\232\230\275Z\204P\276G@\037\2746\016_\2767\0322\274\177\033\\>t}\r>[}\254<\033\005d>\303\364x\276\203[\205>KW\t\276\341\351\007>j\371\236>\333\021b\276&\003\340\274\367\037)\275\337-\232\276\022\244S>\251x\314\276D\317\021\276mm\237>\177\267\256>\337!\005>\250L@<\241\320\207\276\355\244\227;+g;>iD\017\2750;\310\274\240\262}>\307\244\354>(9)=M5c>\0165\240=N\322\352\275\016\260\003>\213\324\213>\363\317\227\276\320\300L\276\207B$\276\236\244\250>\370\265\376\275<\222->\261\252\265\276S\001 >\265\344\310\276\351\3556\275\326\203\n\276\014i\020=;y\327=\177\3430\276\317AA=y\366\304\275\274\312s=\316\205\220\276\354\241=>\346\302\r>m\375\217>\327\212\207\276\200\255h\276\340\020\245>/Qc>\021zC\2768K\236=\264\236\013>Y;\203>\023\315i>\243\324e>u\306\267=*\212\211\276,\233\313<\235{\314>\324\363v\276:\023\234=\376!\030\275\203ng\275n\340\036\276\3655\017>\252#\242\276\3355\277=^\360\353\275M\340\363\274\266\265R>D^\204>0\021\260>\017\325\031\274\267p\201\276\026\350\252>\343W\267\275cB-\276\"\'\300\275\020$v\276SL\227\276\301\230\222=`\210*\275e\262L><\037\300=\352\230\003>\300\303\220>\251\210\355\276\'\257\256>\r0\324=\330\263:>Tq%>\326l*\276\227-7=\231^5\275\022\240\253\276\250E\317=\343af\276\267\270>\276\356\'}>\233o1\276e\261\004\276P\361:>\253\243\202\275\335\314%>\205D\261=\263\227e=}B\254\276\320m\207\2764 \234>&\262\321>A\177\337<S\300\244\275y-g>\222F}\276\357\353w>\324\240?\276-LN=}]\021=\372{#=\'\276Y>\375ai>Zq.\276b\206\255\275\220W\231\276\031#\266>\3768\331=\213\301\024=\304\202\202>\'f|>\343mv=\345\317/>\020\026\214\276\026\3453=\305\201X<t<\215=\002\242\335\276mP\010>\262\002\262>\n\324\262=H3(\275\001\235\r>zk\355\275\211q\305\275\332\3211>\203\220\272\276\332U\034>o\356\033\276\2547\316=i\316\235=\245\256\253\275\301^\323\276\007n\236>`\266\240\276td\037\276\257\271\346>\321U\235\275\201\032\270>\2751\310>jD\233\276r\273k\276V\300\253=\033V\314=&\365\230=\255}\231;\226\241\205\276>-|>\307Z\326\276\346y\000\276\253va>*\265\236>A\260\347\275\277e/\276\272\007K\275.\327\2259\024e\304\276\274=\371\275\2026\375\276\271\033\221\276\345\305\366=\037\317\235\276\222[*>\032\004\010\276\314\257K\275\017I}=\323p\311>\240t\212>t@\265>;\007\004=A=\376<\304\374\361\275B\013\230\275bO\212\276*\270\022<o_\250\275\370\207=>|\'\367\275\232Cp\275\027\250k>\312\274\036\276\266X/\276\0025T\273\237\310\374\275\3015U\276m\364P\276\332n\203>\357\365\252\275Z\023\357=\'\216\272\276\031\\\343=\032\tY\276\273\241\260\275\242=i><6$>\303rI\274kzB>\222}\003\275HmK>\343\003v\275\264#\244=\027\335\007=UUg\276\030\220)>4b\355<\020\326\001\274\375(5\276\354G\351=(=8\276\245Tt<\362S\307\276]\\%>\215\243&\275\256F\300>\315Q\200>t\242^>k\371\203>*n9\276\252I\207>\233hQ\276\375\344\270>A\205\355\2726=-<\361nH>\3341\251>F}U=\214\001N=]7\307>\366V&\274AX\020\276?3\207>\326y\031\276\317\201\207>\364\017\366=\021\351[\275{\333&\275{\262\243\274\227\217\314>*#?\2768\323\024\276\376\266\304<Pu\323>\035\027\275=\365\221\311\275\245\375\031\276^c1\276\001d\235\271\240\352\246=\025[4>Y\276\354=\2428\025\276\221\005\221>B\304\243\276\317\207\t\275\266\211|\274\t\225\261\275P{\270\274\346\367\265\276\033\230_>\032\233\233\276\341=\3678\200\254\274\275\370\004\326=\267\022&>\030\014r=\321\273N\275\3625\022\275\330\rg\275\007\332\250=\240?3>*5\032=C\017\271<\txk\276DM\253\275X\220\240<\317(5>}=\037>4\272M\276\375&]\276\303\306J>P\235\032\276\003qi>\360+\237=o\352\374\273UV\271\275\207\310\211\276\202\223\247\275\3144\313\274\322\243\033>\026\\z\276B\0257<\337\032`\275\242\321\264\275Z\'\221\276\'\322\315\275Cm\033\274\0236\n>\240\365\335=\317\025\020>\013O\216\276t\373\230\276\r\263x>\307\212\231\273\271\260)\276~\351X\276\2737\214<\032\252~\276\017\340\342\274\270O:>\307\227\315\276X\270H=\273)\205>\'XD\274\334\226X=u%\202>\016He>e\253_\276\020\371\264\275-\253\027>\026\364\257<\225\243|>\275\252\203>\253\037\263=\247E4\276e\212\304\276P51\276\346\026\240>\251\007\204<\275\316\246=\225\026\033>\371r\014=M\266\276>1\030\374\275\207\030\200\273\262jY>\225\251\001>\216f\307<\026\210\313\276\274cF>h\270\206\276!\366\000\275\005|t\276\376\2322=\254\313\264>\226\233v\276\351l%\276\355\257[>\3132\250<>q\215\276]\001:>T\241\201\276\014T\216>EjN\276\024!\030\276;P\003\276E\336\023>\257N\222\276\ra\311>\r\013-\276\3130 \276\026\013\274\274\244\377\374\275\233\033\213>\231\352\233>T\351\177\275k\266\255\275\376\366\341\275c\230\311>\016sa>A\362\251<\351\027\256\276/\361\031\276\371\353\310\275\311\261\260\276\212!\017\276\236i\013\2749H\252>V>>>\335\275\261\276\363UD>S\330s>\246\235\362=:,P>-\005{\276\013\237\305=\310\327\242>\232O?>\336\262F\2767\327K\276<}u=[r\256>1\202o\276{@\271\275w\344\253<\223l\212\275\302\355\302\276B\345\263>%\002\222\275\212\301\212=@\346\251\2730\370\021>\222I\215>\021k\257\276\211/\270=\224\256#=\346\0270>\301\365X=\361\270v\276\236S\020\276E\371\234\275\303\017l\276\005\252K=zO=>\354?\324<\257\242\217\276J\013\235\275\332$W;\265>f\275\002M2\276\214F\035\276L/\204\276m\210\223\274\301\225\317=\034h\353\275\r4\315=6\013\204>2\025c>}\307\363\275\240\220\252\275\3053\222\276h!}\275\375\004U\276\254\343I>\007\"N=\275j\224\276\310\205\004>\252>\314\274\300-\213=z\203\007>\302\211\216\276\rv\376\276\203\3569\274\265\277\r\2754\275W>97m\275\341\224\301\276$\325\032\275\302\024+\276\306\032\333\275v\320n=!\233\005>\253\\\034\275+v\004>\226a#\275\010\261F\276)\312\214\275\263\227\220=\264{\021>\217\177\346\273)\023\\>\227\300\031=^\245@\276X\023n=.w&\275I\332\316\276\331 \025>\024\370\320\274\2254<>D\374,>=\227\312<\351\332\205\276\215\204\270\275\264\206\037>\341e\262=\t\"\364\275\206\004m\276.r\027>r\371\204\2766\327\021>\034\\\240\275\312\215\275\276E\323L>\226\330\260=\316\027$>\301Tm>\206y\036>\003f\002\274C\362\233\276\243\010\275<+c\341=\221\001\257\275\201\335\033;\225\016\366\275\227v\311\275E<\033\276S\007\200\276\255Pa\276=\2051>\227\321\327\275\'o\312\275V\224\031>\003\250E=\3275\357\275?\025\342\275Z\3627\276)g\262>\002H/\276;\006\252\276\207\212O>\202J\233=\250\255\316>\353\347\346\276\371\262\'\276u\244\233\276$Eu>\300gL\276\217m,>w\300\274\276\212b\342\275\240\3543>\355#\362=\033j\214>\241\233\005>\253\265*\276\224\024@>\276\3740\276l\301\211=\037m\210\275E\245m=\013\273\200\276\242\013^\276\377\302\226>\222a\025>\264U\206\276\303\005\227\276\313p\267>[\202B=\223\341#=\273 f>\263\002\002>\031Q\276<\033\225\037>\177_6>\027\301[<\024E\363\275\024rw=\203.\304>F\276X\274\260\261\210=#\267H\276n\374\227\275a\267\247\274\205\202\007\2762Vo\276|{G\276/\372\300\275\355\036g>Z\353\316\275\025\024\227\276\316\362@\276\271V6\276\303\217B\276+\021\323\276.I\022>[\027\334=\025\322\270\273\222\235\267>\247\305\226=\235\256c>\177\270\014<m\324o>\310\034\252\275S\330\321<\014\202\207\275=|\232\275Qe\003\276\252\210+=mz\332=\2479\023\276c\327b\276N\362+=\261\277\275\275r*\375\275]p\342=c\r\353<\365T\214>\314a\307>L\244\223>\033\214\010>8\373\010\276b\244\326\276\234\177\301\275Xj>=\3024\003\276:\203]\273\213\005T\276\364\005U\276_\0147>\331\360P\276\217|x\276\306\237\311\275\317\266\236\275!S\214\275\333\335\201\276\351\301\315\275\300v)\276R\261\274\275R\303\245<9[\014\276\205\330\004>@\301j\275\324\345>>\375_\201\275eC*>\300\233\224>\351\255\234\275\303\223\213\275L\225\225\275\305\222~>A\221G<GN\217<\177U+\276\306S\212\275]\371\003\276\233\216\211\276\206\374W<P\004\\>\333\251\023\275\030E\022=\355\\/\275\242\375\365=r\302\204>\276\225\240>z!\263\276|\273\253>\345m\332\276S\333\004>\225\310\002\277\242{\231<\033zV>\207\357\272>\306o\261\275\264\020\215\276\014\226\360<:\016*\276\336Z\216=\234\276\373\275K\377X\276-\355~\276=\211=\276\245\325+\274\311t\017>\214\'q\276\243\260\253>\323\035\250\276\272\343\227<\216\234\243\2768\222\265>\344R\371\275I`\303\275l~Y\275\220\365\233>\204\356\335\275\200\307w>1Z\031>s\261\020\274E\235\215\276\247p\213=Q\257\373:\004\265\271<\277|\267\276\202\325)\275dWf\276\251\257\312==X\202>\363\334\363;\216 \217=\237\007\204\276\026\201\243>%\004\307\275\02131\275Y\224\227\275)V\255\275\363\273\212\275\326\340\304\276\001\005T>\224\022(=\244^\022>\376\324\235>B1\022\274\352\316\000\275j\343\260\275\0038\027>\313\254\373\274Qio<\204\210\307\276\257\013\177=\327\232\201\276\265O\302>\225\037\373\275O.\275>\332\263/>\350\252N>\335\207\241<\241\213\006>\233?\031\275\032V\310=|\236\302\276@nH>\254\375+\275\307\005\'\276\344Ox>\310Cc\276\365\014\306=)2^>8\342\302=\321\2630=\345#Z={{\304\275\365\357\225\276\246*\303=c\373\232\275\003\267\277\275\352C@>75D>\302\341\226\276\313\247->\225BC\275.\3116\2765Sp<\367\200\262\276\313p\231>+\274\311=\362\370]>{ D>\250w\233\267Vua\276\324\013\026>?\201h=\023F.>\262\302\325=a\337\375\275\2333q>\024\220\351>\013\334\366=\0252\364=\376\376\214\276\265\002\277\272\265\2307>E|\317<\257\334\">\274\334\217>\200\017|=\311\305\376=\021\213q>\307L\013\276\023\256\210>4\244\325=\003\334\"\276\036B2\275GN8\276\327^\311\2752TU\276rC\022>5\340\213\2744\323\266\276\330\014\320=\355v\305\276\242\344\372\274\272,\007\276\255\032\275\275\024\335\317>\370\220-\274{V@=\001pt=Z\216\230\276us{\275@\366\216>\263\226\006\275vg\010\276\276\342\347\276\360\263\202\2757\036\231\275\t\332\014\276\004\335z\276\276\237\005\276\343\352]\276\026\312\306>\303Uu\276\0360\233=7\242\023<s\271\343\274\265\017d>(\311&\275\364\270k\276\372\247\341>a\2354>\266\312?>\356\247K\275\374a\037\276\264\304\222=\350\275\202\276\310\006\326=\341`\351\275\223{\214>\261\357j\273\265\210<\276-:d=\t\022\224\276ca-=\237,\333>|\006\322\274\262\250\342=^\367\231>y\216\346\276\300\240\201\276\342\345\375\275\237\354s\2757\361\204>\300\273@\276\016\n\336\275\241\362\342=\274\262O\276o+\314\275\230\351\\>N5\355;7c\027>\305\257\374\274\343\027[\276>\264u\275\t\022\343>r\366>\276.9\033\275v]\227=#\375\313\276/\244]>&n\306\275\252\210\364<\202\201E=\306\330K\276?s\250=IB\004>6\316\023>e,\204\274\352\014\232=\216C\202\275\345\334\261>\324R\373\275Z\321\205>\232Z\032\276\306.\034>\263\2618\275\225D>\276\211\317\273\276\nBx>\226\222d\276\305{\262=T\3324>mbH<\350\030\006\276\321\221\257\275\024\317\354=X\212\212\276k\317p\276ys\201=\312{\355=\033p\025\276Y\333\225>\351*\256>x\3645>\204\315\235=\203\004\203\276:p\204>\252\372#>\007\253\321=\224k\005>j\000\014>-/4>\361\305\373=\313=\231><\216\321\275\223\376$\276\325\353\030>\271`\n>\352f|>\242\3412\276`\006\361\275T5@>\335\r\265=\216\325\013>I \027>{\030\334>\003\016\314\276\365Ge\275\235D\031\276\325\266\030>\243R\245<v\346\205=\024\260\032\275\027\2643=\302R`\276^\204M\276\341\304\356>C\266w\276\321n\271<\261b\314<\350\022\324\274\344\203\026\275\\[\007\276\027\021\\\276F\017{>!\271l>\222\303\314>>\263\024\276\305,\311\276\277{/\276v\312\272>m\211\262\276#\222\263\274\311E\242\275\254\022\263=\363f\360=:B{\275ci(>J\016\262=\322\265k>SO\247>\206i~\275\343\036\\>\036\210\354=a\314=\276\023#U\276$\013\034>H\031\227>\277[A>\005\207\267\276]1\207=Fa\334<\035b\326=\331\336\362>\213\177#\276d<P\276T,\203>\035Q\225\276\313\260\240>\264vo\274\233D\007>\322\300\241<]\242I>\324\206h=]^\263\275&dw>l7\201<Y\006\354\275\243>\213\276\021\224\355=\270\244\336\275\026\231\334= 2n\276\374F4<\206\"\222>\274\007\345\275T\022{\276\t=,>\026_\030\275\247]T\276\031\374\246\275w-\243<l\343\032>\210\217\246=V\370g>\361\\}>\362)[>\302\'\326=H\270\327<\nz\301<W\261]>\266\2332\275\303h\223>\260\274/>\251\331\330\276\3246\337\275\213\232w>\260\256\346>\033\201\362=\033\323e>\324-X>\261\331\007>\254\310?\276}.\221>B\226\000\275|\255\331\275\335!\302\275\260C\246:\302Z\242\276\354\376\321\276\217W\202>\361\3573>\330\333\243\276\010tj\276\342\307\263\276\"eb>\264\001G>\014\'\232>\021\027\212\275\360\225\221\275e\346\214\275\n\211v>L\201\262>\n\032\202>n&\027>L$\r\276ymo\275\251\271\343\275\\>\014\276\374\242\202\276IL;>\260m\321\275\234&\265\276\262\342\233\276t\331&>\261\241\265=\275\244%\276\362\343\306\275\006\323\\\276\326\352\221\276\243\365\362\276\375\364\255\275C\307\263\276M\260R\276\270\234\316\276v\327\260\275\303\006\217>g\220 \276\021\204\267=1A\322=\257\0179>\373\003\026\275~\323\t\276\rE\213\276\366r\001\2758#\177\276N\314\234=\337\354\\><\224\217=K\243\202\275\350#\322=\372\0229\276\214\003G\275\016\030\016>a\024-\276\315Z\241>\342\024@>K\002d\276I[~=\315\202\007=8t\340\274Ve\215>\017\304\357\275\324\310u\276\346\237\375\275%\tO\275\205yl<\335\024Z>&B\233>\327dK\276\347\322!\276v\023\357\275\036X\210\275\304\231M\276)\265\202\275\321;0\276\'\236\235<\226\035\323=*i\251>!\317\005>\203D\335\275\251\3510\275\362\226S>\230\354\017=\377\215I\276],\306\276\\;\234>\335\270\277>5\366\263\276\352\372%>\370(\261\275R[\270=\226N\234;\375q\226> 9\274>H\302->\274y\203<ceh\276\276\277\363=@tZ=\370pH\276K+\231>\266\302\204>\217\202\221=e{\360=EO\353\274\342pd>0\320-=\213\270\">\337\351\311\2751\335\312<\324\tM\276G\327\213\273\251\010v\273\345\034\010=\032*\264\275\350\256G\275\337$\231\2761Oj\276\373\026P>\262\347\202\276\261kS\276\257.\326=\301~a\276\251\2557\276\370o\254\276\000\223G\276 \356\023=\330\225\204=;\234>>\236\361\267\276\236QX\276,\002\343\274\367\271\236>\272\336\214>\322)l\273\326\0144\275\234A\217>\233\273\"\276\375]Z=~!\206<\263\001\373\275\315\204\203\276\262yg>w\366\254>\222\260\210\275\2143_\274\034\242j>\253<\301\275X\326\211\274\345\233\302\276\315\3227\276\024 \267>\336\323\256>Ry\t>\357\333>>\nj\202\276\033\004\225\275\376.\260\276\217\310B\275\305\333\002>n\324\254\270Iuq=J6<>\375\332\331\276\376$)\275\r\"\227\276W\317Q>\372i\264\275W\363\036\276N\321L>\310\335?=\273\206\224\275\235\325\350>]\007\225>\366\353:\276\211!\352=\211\206\005\275\256)`\276\351mD\276\001\310\201>s]\213>\317\344\000?\213\2473\276g\206\231\276\370Ed\275\246\315\005\276|\334\210\275lT\263<\366\023\034\276\222\352\313\275\351\340\016>\313\277\207\276\025\\\260=\207\241\271\275\257\265\224>]0{\276\227Y\310<\306\330\351\274\366\326A\276\0321H>)@\335=I\352X>5\214L>\210\273\211\276{\224\237\276\030\300\030>\361\236\224=\311q\033\276Ls\007>\377\244\220\2752Q\337\275\233\220|>\313\223\315\275\037\343\365\275/>r\276\230\340\332=O\370\234\276\017@d\276Gk$>\211\336\315\274\355\324\034>\2618\327=\271\023a=\004\230\240=\275]x>\373z\225>\216\034s>\034d\027\276\0340\253>0^g\273\2310\000>\3033\227\275\226\351\351>\345\357\034=4\267\253>\270\010\271>7\321\226=&\301\302=\001o\207\276{r%>-\274\210>Q\305e=\252_\212\274\220\375\034\274\341\"I\276\272\226\232>\305\303C\276s\021\345\275\034\000H=s\002\212\274,+\343=\320\\\026\276\221\367\225\276_\304\222\276\2460\220>\217p\243>\314\337\020>@&\230=V.\247=\231E\263\276\324\220n\275\245\326\234\276\274\341\323\275\272^\367<\237vL=\242*_>Jom<8\237l\276&G\305>Kf\302>mn$\274\202\024\310=\261\017\250\276\032\360p>\232\226\215\276B\264\217\276\264\333\036>\370\260\316> \352\235=8T\361=B\363\315>\377\270\017>\354\305\303\275\366\210!=\177\317f\2767\233S\276p\2359\2761\211\341\275\262f\035\276\327BJ\276\213\311\004\276\n]J\276xb\262;{\266x\276\222\036\315>\205\3419\2764\024|\276\0061\301<c\353\035=\233\372*\275]\344\263=\322\212\360\275\334y$\276\331\233\206>\0203K\275%\373\224\2766\\\212>\316\004M\275\335\017\251>Dy\243=\326>\310>\020S\">-\007\'>\202C\213=\327}\315\2743\215]\276\272\002\330\276\'\230N\276o\022\265\274\362\311\274\276\340\320\221>I\024U<\031\361\374=\226\000g>{q\037>}\306\005>CW\030>\202{\244<dNh\276\373\272\365<\231v\010=QMR\276\206]+<^\346\201\275\221\375\302=\212\215t\276$\214\265\276\354\376\312=\333Gz\276\022}%>\277\357\324<\213\366\337<\316E\013>\037v\345=|\203\202\276;\332\205\276\357\272\010\276d\302\341=-\rS\276W)\227\276\253\006\037\275\301\246\344=\353\313\221=5i\252\276V ~\275\275\244r>\363\323)\276\026\361\346\275\205\310\375\275sA\305<\250^~\274\260^\014\276\320_&=\356\253i\276\313\274\'>\333B\362\275K\2052\276/\246\023\276\247\312f\276\264\342\t>_\340\245\2750\202\244<Y\310\304\275\007\205\306>\325\362\275<\336D\354>b,\003\273\330\335T>a\267\037\275a\315\257>B\345\341\276Js\353\273\021*A=\036Y\035<\3702\001>\372\347\331=1\305\324=\243\271\246>\362\241\226<%\032\224\2750@L>\351j\240>\207\002Y\275#28\276\003S\266\275\272q\207>~\337[\276\345\3535<B\224\030\275o}z>\020\022\362>\372$\367<\242\240\017>]\r\253>\370\212\245\274\006\225f=\215\347\020>\302y.>\272\026+\276\021\361$\276\032\314 \276<X\017=\243\315\220>x\330\026>\222lv\275\214\\)>\205\206k=\361\314\223\274\2639\266\2754zi\276\020\361\304\276\004\202M<\371*\354\275v\033\004>-\344\001\276#\364\270\276\366\261\201\275\032\330/>\006\326#;c2`\276\261N\232\276\242\020\226\276\026\217)\275Wj\270=\323\007\210\276\316X\235\275\220@\322;\013LR>;\261\232\276\267\021\320=\340U5>\002\301\221\276\262\344\353=\231\t\223>\353!3\276\254\263\243\275\326\021\370\276\344.\220\276\324\311\226>I\233\346=\036Si\276\r\336Y<\324\210|\274`\365v>tJ\340=\3374\016\275\335B\016\276\3454\262=\250\337@>\177o\350\274\253\020\225=\341\362t=F\1777=\315m7=g\220\230=\034(\301=\007\355R\276\273q\'\276\337\021\256\275\350%\300\274\361V\274><4\360\276\202J\020\276B\223\023\276\355\360\\>\277wh>\'\373\003\276\273\375\215>\232<\202\276\222\345\304>\360jH\276o\303.\276\334\207H=\374\tI\276\313\026\252>\261[B>\007\367\303=\255\251\376=4\231u\275x\\\213>`:{\276\310\366\031>j\035\303\276{?\r>\010\233\007\275\034\377k\276\365\360\323=cD(\276\005\207\364\274\357\004\034\276\030\010\260>3u\007= s\212>\326\231\002\276\006k\321={ \247\275Z\"\230\276\320#\242=\020s@\276\272x\252=!\2025>\331\003\372\275\264\370\233<\344\367I\276L\317\026\275\226Y\231>X2\234\276\273\272\360\276\236;\332\274\215\315B=\257\n\243=\343i\312<\025\200\034\276\252\t\275=\227,\253=\362W\254>\006\252\252\276\301\035u\276\244g\303>\006\250\r>\3709\227\274\271e\256:\246\206\016>\213\233\227>w8\004=\035\021U>\263H3>\020\213\222>\246>a\276y\371\264\275\3767\006>F\254\344<\320\376\205>\t\2171>\377\304\255\275\277\260\020\275Y\210\362\276\274;\034\275\226\370;\276N_\000\276j\177f>m\315\373=\232\240\367=::j\275\211\371Y=\003\230\374\275\357\027\350\276\334\357\026=\335\276x\274n =>\354\263\007>`5~>XI\024=\232p\300=\357u\240\276dp\244>\223\371\334\276.\335B\276\327_\202\275\tw\373=\236\362k>\312\340\231\276\263\023\257\274T\032\220>\313f\010>\352\353Q>l[\237\275\353\306\245>\220c\273=:\273I>\207\235\t=%\3250>\350l\233=1q<\276=\341/\276\326\r\353\275R\030\324>\246y\027=0\367\375\275j\317\354\275\244T\330>$0\025\273\222\200\207=8\200\375\275\177(\037=s\372\177\275\220\375\266\275R\307V\276U\241\206\276co\224=Q\206\032>\270*5\276\232\332.>)\266m>9\266\003>Of\302=\t-\033\276I\316<>r\025\222>\366>G>y\207\346\274O\366\337>#\246\223\273\016 ~\276Y3_\276^Kp\276\277\310\324=S.\206>\253\010.\276\307\300 >19\240>/\367\253\276Z\355\277\276W\016\333\274\272\221\317\275\277j\221\276&\032\312\276\301FU\276\207\343\202\276\255\037Z>)f\222>\366\257J= \223\035\276\n&\'=,S}\276\214\317h>\240\352y\276\252\237\200>\245\2148>S\335\"\276l\233H<-\210\037>\337\300L\276zS)\276ttI>\244\240\265>\363F\\\275\031\320\250>3\333\'\276\"\023\252>a\001Y\276\013\335\036>\367\nd>_\361\231>\031\207\201>\267\035i<\375\322\210\274G\366c\276w\300\261>i\276<\276\275\331\010<\213\032\007>!\021Z\275\226jx\276?~\005\275\0169N\276B\247/\275"
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\215\207C<\356\354a:D\340\025>x>\334=\227\267\033=\307\3746;\026\002\301=\275=:\274\321\311\367<\240\000Z\275\021\013\346=n\nY;\024b\343;\202\335~<\304\033\020>\017\270\206\275\205\215\020>\265Z\233=4,\275<\034<\305\273E)\027;\250\373\036=9\233\033>\240w\227=\373d\177\275\257\344p\275\263sc=G\261\211=\200\323\265=\365\325\026\274\323\353\262\275V\017+>O\037\203=o\375\243\275\205\333Z=\270\010\326<}\327\214\274\337\240\364\274\211\306\250=\'\306W=\260\232\306;\215\271-<.{\317=>P\216=\211l\013>I\346\230=\005W\312;\375\266\302=\3050\305\273\242\312\253="
      }
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "Identity"
  input: "dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "batch_normalization/batchnorm/add_1"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Relu"
  op: "Relu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "k\303r?\027\034{?\263g^?N\232z?\276\307c?\306Cr?\020x~?=it?~\027h?\357\332\206?\037[g?\'\252s?\212\303\177?3\033u?A\311b?\277\265t?\301\201f?\357\230d?\340\264g?a\010w?OXw?\306,w?F\265w?\243R\204?\221wr?\247\231|?\335\256\211?\001\253_?<Um?\213g\201?\006\334|?V\023S?\031\377j?\2233\203?\226\357z?\224Mj?\260\215w?\372\365z?\362(d?A\232t?\021\323n?\320\nf?D\351l?Vk\200?\312\346e?\304\035\201?\177\353a?^P^?\276\373\203?\252 b?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "%l\323;\362B\330\274\330D\276;\264\023\355;\227\260\277;re\334\2732\312o\273\251_\322\273\261L\300;\022\251\254\273P\335\276;\314@\253;\252\205\240\273\r\311\271;R\364\274;\241\352\302;*\301\276;=?\312;\253P\313;\325\340\304\273\250g\306\273S\007\307;8\364\243;\200}\337\273w\353\224<xy\250;@\\i\273\\\326\300\2731\314\260;\341\241\317\274\215\216\240\274m(\277;\034c\276;{v\237<\243\375\234\2734\234\272;\313c\311\273P\202\013<w\365\266;\266t\252;\366\302\311;\r\210\302\273g\256\263; Y\222;X7\266;\254\277\270\273TN\276;\261z\310;\2743.\274Z\225\270\273"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\206\177n?1C\014?\343 v?Q\021\007?\307o\032?\232w\305>S\222\030?X\334\002?\224O\'?s\223\032?\321\353\211?&.\000?\367\306\032?\363{\032?\022d\200?\277$\373>\3362\206?\321{\374>\205\334\013?\373\303$?6\037>?WT\371>\003\314\341>\342\3228?KV\316>\020Kd?7\256\035?\2400f?Dn\032?xt\372>\247+\334>g[\206?\276\305\t?\273\365I?H\373(?v\234\370>I\322\'?\212\302\336>\262\254\022?2C\"?\264h\010?\013\303\361>\223\272P?\237R\033?s\204(?\300a\021?\016\361#?\371*P?\361\210\010?Q\301s?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        tensor_content: "\2644\233?v\272\345>C\324\341?\274\217Q?\001[\177?\001l\275>L\000$?\331\213n?\031\204\232?\230\303/?\210\037D@\341\1779?\234\226\216?\370\2340?\223\272\014@\331I\237?A\204\314?\035\330\017?\234T}?O\213\220?\325`\237?8H#?4\3776?\313\330l?\315\225\333>\225]\034@\212\037@?\270\200\224?\252W#?\231\226\370>\237h\306>\335J\223?\361%D?\252\365\243?a\001P?\314\207,?\310\006j?\373\363\004?\"eR?\362\360\\?\2507<?0\257\030?\215\200b?\247<U?X\2139?\'\377)?W\346\257?\322vw?\213s/?\3557\224?"
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add"
  op: "AddV2"
  input: "batch_normalization_1/batchnorm/ReadVariableOp"
  input: "batch_normalization_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "batch_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_1/batchnorm/Rsqrt"
  input: "batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_1"
  op: "Mul"
  input: "dense_1/Relu"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_1/batchnorm/ReadVariableOp_1"
  input: "batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "batch_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_1/batchnorm/ReadVariableOp_2"
  input: "batch_normalization_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/batchnorm/add_1"
  op: "AddV2"
  input: "batch_normalization_1/batchnorm/mul_1"
  input: "batch_normalization_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 1
          }
        }
        tensor_content: "S\245s=\nI\177<\377\353\227>\365\342\344<a\314\362=\250\3361\275\253\032b\275\006\266\240\275\006\3216>\004\276\232\275\204\262\245>\337k\254;\323o\333\275\252>R=\252\000\206>*\337\332=\335\271\016>\253IT=E\252\242=\246l;\2762v\001\276v\020y\273c\002\262=[\351\214\275\303\306%\274,%\335<\257\274\252\275\024\275\222\276h\336O=\r\'\323<\354~\234<\337\246Y>D4\226=\330\0212\275\330\216\315\275\036\306\362=\275\374\272\275\302\026 =\326x\326=\301\213\312=>\3022=\311P\252\275@J\266=\250\r\250<\037\211\372=|\245l\2755Gg>\267\367\240=\235-I\275\001\342.\276"
      }
    }
  }
}
node {
  name: "MYOUTPUT/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.005718101281672716
      }
    }
  }
}
node {
  name: "MYOUTPUT/MatMul/ReadVariableOp"
  op: "Identity"
  input: "MYOUTPUT/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/MatMul"
  op: "MatMul"
  input: "batch_normalization_1/batchnorm/add_1"
  input: "MYOUTPUT/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "MYOUTPUT/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "MYOUTPUT/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MYOUTPUT/BiasAdd"
  op: "BiasAdd"
  input: "MYOUTPUT/MatMul"
  input: "MYOUTPUT/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MYOUTPUT/Sigmoid"
  op: "Sigmoid"
  input: "MYOUTPUT/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
versions {
}
